{"kind":"FETCH","data":{"headers":{"allow":"GET, HEAD, OPTIONS","connection":"keep-alive","content-length":"280013","content-type":"application/json","date":"Sun, 26 Nov 2023 20:29:57 GMT","nel":"{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}","referrer-policy":"same-origin","report-to":"{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1701030597&sid=812dcc77-0bd0-43b1-a5f1-b25750382959&s=3h74BbElrjUTsM6mQiw8J3fyDfYAaKgmA1MAq25%2BL3s%3D\"}]}","reporting-endpoints":"heroku-nel=https://nel.heroku.com/reports?ts=1701030597&sid=812dcc77-0bd0-43b1-a5f1-b25750382959&s=3h74BbElrjUTsM6mQiw8J3fyDfYAaKgmA1MAq25%2BL3s%3D","server":"gunicorn","vary":"Accept, origin, Cookie","via":"1.1 vegur","x-content-type-options":"nosniff","x-frame-options":"DENY"},"body":"{"data":[{"id":1,"institution_location":"United States","created_at":"2023-11-08T22:29:32.302867Z","source":"https://www.chop.edu/centers-programs/refugee-health-program","institution_name":"Children's Hospital of Philadelphia","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Refugee Health Program at Children's Hospital of Philadelphia (CHOP) provides comprehensive healthcare services to refugee children and their families. The program's scope includes:\n\nInternational vs internal migration health: The program focuses on the health of refugees, who are a specific type of international migrant.\nNational vs regional vs global: The program serves refugees from all over the world, and it has a global reach.\nTypology of migrant: The program serves a variety of refugee groups, including children, adults, and families.","objective_of_training":"Provide training for pediatricians to conduct research on the health of refugee and immigrant children","trainings_faculty":"Faculty from CHOP and other institutions","teaching_mechanism":"Both","teaching_approach":"participatory, case study-based, and service learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Columbia university: program on forced migration and health: the program offers a variety of funding opportunities, including scholarships, fellowships, and grants.","sustainibility_factors":"This program offers Online Courses that are accessible to people from all over the world. The program also provides scholarships to help people who cannot afford the tuition. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"CHOP Refugee Health Program: Maintaining funding and resources to support the program."},{"id":2,"institution_location":"United States","created_at":"2023-11-08T22:29:32.330943Z","source":"https://www.publichealth.columbia.edu/research/program-forced-migration-and-health","institution_name":"Columbia University Mailman School of Graduate Degree","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Program on Forced Migration and Health at Columbia University Mailman School of Graduate Degree is a research and Short Course that focuses on the health of forcibly displaced populations. The program's scope includes:\n\nInternational vs internal migration health: The program focuses on the health of both international and internal migrants, including refugees, internally displaced persons, and asylum seekers.\nNational vs regional vs global: The program has a global reach, and it collaborates with partners from around the world.\nTypology of migrant: The program's research and training covers a wide range of topics related to the health of forcibly displaced populations, including infectious diseases, mental health, reproductive health, and access to healthcare.","objective_of_training":"To provide students with the knowledge and skills necessary to work in the field of forced migration and health.","trainings_faculty":"Professors and lecturers from the Columbia University Mailman School of Graduate Degree","teaching_mechanism":"Both","teaching_approach":"participatory, case study-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Columbia university: program on forced migration and health: the program offers a variety of funding opportunities, including scholarships, fellowships, and grants","sustainibility_factors":"Program on Forced Migration and Health: This program is part of the Mailman School of Graduate Degree at Columbia University. The program offers a variety of courses that are taught by experts in the field of forced migration and health. [Sustainability factor: Expertise]","numbers_since_2015":"Data Not Available","key_challenges":"Program on Forced Migration and Health: Securing access to data and research participants."},{"id":3,"institution_location":"United States","created_at":"2023-11-08T22:29:32.359406Z","source":"https://migrations.cornell.edu/study","institution_name":"Cornell University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migrations initiative at Cornell University is a multidisciplinary research and teaching initiative that examines the health implications of migration from a global perspective. The initiative's scope includes:\n\nInternational vs internal migration health: The initiative focuses on the health of both international and internal migrants, including refugees, internally displaced persons, and seasonal migrant workers.\nNational vs regional vs global: The initiative has a global reach, and it collaborates with partners from around the world.\nTypology of migrant: The initiative's research and teaching covers a wide range of topics related to the health of migrants, including infectious diseases, mental health, reproductive health, and access to healthcare.","objective_of_training":"To understand how human migration shapes the world on the move; explore factors that influence migrants' decisions to migrate and drive their departure, arrival, and integrations into new societites.","trainings_faculty":"nan","teaching_mechanism":"Both","teaching_approach":"participatory, case study-based, and service learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Migrations at cornell: the website lists a number of funding opportunities for students and researchers interested in migration.","sustainibility_factors":"Migrations at Cornell: This website provides information about migration and displacement. The website also offers a variety of resources, such as news articles, research papers, and datasets. [Sustainability factor: Resources]","numbers_since_2015":"Not available","key_challenges":"Migrations at Cornell: Keeping the resource up-to-date with the constantly changing landscape of migration."},{"id":4,"institution_location":"United States","created_at":"2023-11-08T22:29:32.380259Z","source":"https://einaudi.cornell.edu/learn/academics/migration-studies-minor","institution_name":"Cornell University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migration Studies Minor at Cornell University is an interdisciplinary minor that examines the historical and contemporary contexts and factors that drive international migration and shape migrant experiences around the globe. The minor's scope includes:\n\nInternational vs internal migration health: The minor focuses on the health of both international and internal migrants, including refugees, internally displaced persons, and seasonal migrant workers.\nNational vs regional vs global: The minor has a global reach, and it covers a wide range of topics related to migration, including the political, economic, social, and cultural factors that influence migration patterns.\nTypology of migrant: The minor's courses cover a variety of topics related to the experiences of different types of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To understand how human migration shapes the world on the move; explore factors that influence migrants' decisions to migrate and drive their departure, arrival, and integrations into new societies. Coursework in the minor prepares students to understand the historical and contemporary contexts and factors that drive international migration and shape migrant experiences around the globe.","trainings_faculty":"nan","teaching_mechanism":"Both","teaching_approach":"participatory, case study-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Einaudi center for international studies: the center offers a variety of funding opportunities, including scholarships, fellowships, and grants.","sustainibility_factors":"Einaudi Center for International Studies: This center offers a minor in migration studies. The minor is designed to give students a comprehensive understanding of the causes, consequences, and management of migration. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Not available","key_challenges":"Einaudi Center for International Studies: Attracting and retaining top students in the migration studies program."},{"id":5,"institution_location":"United States","created_at":"2023-11-08T22:29:32.408393Z","source":"https://www.coursera.org/learn/international-migrations","institution_name":"Coursera","type_of_course":"Online Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The course \"International Migrations: A Global Issue\" on Coursera examines the global phenomenon of migration from a historical, political, economic, and social perspective. The course's scope includes:\n\nInternational vs internal migration health: The course focuses on international migration, but it also discusses the health implications of internal migration.\nNational vs regional vs global: The course has a global reach, and it covers a wide range of topics related to international migration, including the political, economic, social, and cultural factors that influence migration patterns.\nTypology of migrant: The course's modules cover a variety of topics related to the experiences of different types of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide learners with an understanding of the key issues in international migrations.","trainings_faculty":"Faculty are drawn from the Sciences Po Paris and other institutions around the world, and have expertise in a variety of areas related to international migrations.","teaching_mechanism":"Online","teaching_approach":"didactic, case study-based, and interactive","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Coursera: international migrations: the course does not offer any specific funding opportunities, but students may be eligible for financial aid through coursera.","sustainibility_factors":"Research-based course on migration studies, accessible online and free to audit. [Sustainability factor: research]","numbers_since_2015":"Data Not Available","key_challenges":"Coursera: International Migrations: Ensuring that the course is accessible to students with varying levels of technical skills."},{"id":6,"institution_location":"United States","created_at":"2023-11-08T22:29:32.431880Z","source":"https://sites.dartmouth.edu/rms/","institution_name":"Dartmouth College","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Dartmouth Consortium of Studies in Race, Migration, and Sexuality (RMS) is an interdisciplinary research and teaching initiative that examines the intersections of race, migration, and sexuality from a global perspective. The RMS's scope includes:\n\nInternational vs internal migration health: The RMS focuses on both international and internal migration, but it also discusses the health implications of both types of migration.\nNational vs regional vs global: The RMS has a global reach, and it covers a wide range of topics related to race, migration, and sexuality, including the historical, political, economic, social, and cultural factors that influence these intersections.\nTypology of migrant: The RMS's research and teaching covers a variety of topics related to the experiences of different types of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Provide students with a comprehensive understanding of the complex relationship between migration and health, Teach students about the social, economic, political, and environmental factors that influence the health of migrants, Teach students about the different ways in which migration can impact the health of individuals, families, and communities","trainings_faculty":"nan","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, participatory, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Dartmouth rms: the program offers a limited number of scholarships to qualified applicants.","sustainibility_factors":"Dartmouth College Refugee Studies Program: This program offers a variety of courses on refugee studies. The program also offers research opportunities and internships. [Sustainability factor: Research]","numbers_since_2015":"Approximately 200","key_challenges":"RMS at Dartmouth: Maintaining a small, intimate program that provides students with a close-knit community."},{"id":7,"institution_location":"United States","created_at":"2023-11-08T22:29:32.455229Z","source":"https://las.depaul.edu/academics/public-health/graduate/public-health-mph/Pages/default.aspx","institution_name":"DePaul University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Graduate Degree (MPH) program at DePaul University is a professional Graduate Degree program that prepares students for careers in Graduate Degree. The program's scope includes:\n\nInternational vs internal migration health: The Masters does not specifically focus on the health implications of migration, but it does cover a variety of topics related to Graduate Degree that are relevant to migrants, such as infectious diseases, mental health, and access to healthcare.\nNational vs regional vs global: The Masters has a global reach, and it prepares students to work in a variety of settings, including local, state, national, and international organizations.\nTypology of migrant: The Masters does not specifically focus on the experiences of different types of migrants, but it does cover a variety of topics related to Graduate Degree that are relevant to all migrants, such as the social determinants of health and the challenges of integrating into new communities.","objective_of_training":"To train practitioners for working in the field of refugee and forced migration","trainings_faculty":"nan","teaching_mechanism":"Both","teaching_approach":"participatory, case study-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Depaul mph: the program offers a variety of funding opportunities, including scholarships, fellowships, and grants.","sustainibility_factors":"DePaul University: Masters with specialization in migration health. Online and in-person options. [Sustainability factor: Accessibility]","numbers_since_2015":"Not available","key_challenges":"DePaul MPH: Balancing the need to provide a rigorous academic program with the need to be accessible to students with varying levels of experience."},{"id":8,"institution_location":"United States","created_at":"2023-11-08T22:29:32.479454Z","source":"http://catalog.drexel.edu/coursedescriptions/quarter/grad/chp/","institution_name":"Drexel University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Community Health and Prevention (CHP) program at Drexel University is a Master of Science (MS) Graduate Degree program that prepares students for careers in community health and prevention. The program's scope includes:\n\nInternational vs internal migration health: The CHP program does not specifically focus on the health implications of migration, but it does cover a variety of topics related to community health that are relevant to migrants, such as access to healthcare, mental health, and the social determinants of health.\nNational vs regional vs global: The CHP program has a global reach, and it prepares students to work in a variety of settings, including local, state, national, and international organizations.\nTypology of migrant: The CHP program does not specifically focus on the experiences of different types of migrants, but it does cover a variety of topics related to community health that are relevant to all migrants, such as the challenges of integrating into new communities and the importance of cultural competence.","objective_of_training":"To prepare students to be leaders in global health and population health.","trainings_faculty":"Faculty from Drexel University's Dornsife School of Graduate Degree, as well as experts from around the world.","teaching_mechanism":"Both","teaching_approach":"participatory, case study-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Drexel chp: the program offers a limited number of scholarships to qualified applicants.","sustainibility_factors":"Drexel University: CHP program with specialization in migration health. Online and in-person options. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"Drexel CHP: Keeping the program up-to-date with the constantly changing landscape of migration and health."},{"id":9,"institution_location":"United States","created_at":"2023-11-08T22:29:32.500455Z","source":"https://www.jhsph.edu/departments/international-health/global-health-masters-Graduate Degrees/master-of-health-science-in-global-health-economics/","institution_name":"Johns Hopkins Bloomberg School of Graduate Degree","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Issues","target_population":"Migrants and Refugees","scope":"The Masters (MHS in GHE) at the Johns Hopkins Bloomberg School of Graduate Degree is a professional Graduate Degree program that prepares students for careers in global health economics. The program's scope includes:\n\nInternational vs internal migration health: The MHS in GHE does not specifically focus on the health implications of migration, but it does cover a variety of topics related to global health economics that are relevant to migrants, such as the economic costs and benefits of migration, the impact of migration on labor markets, and the role of migration in development.\nNational vs regional vs global: The MHS in GHE has a global reach, and it prepares students to work in a variety of settings, including local, state, national, and international organizations.\nTypology of migrant: The MHS in GHE does not specifically focus on the experiences of different types of migrants, but it does cover a variety of topics related to global health economics that are relevant to all migrants, such as the economic determinants of health and the impact of migration on health systems.","objective_of_training":"The objective of the training offered by the Masters (MHS in Global Health Economics) at the Johns Hopkins Bloomberg School of Graduate Degree is to prepare students to use economic tools to address pressing global health problems","trainings_faculty":"Faculty from the Johns Hopkins Bloomberg School of Graduate Degree","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Johns hopkins: global health economics: the program offers a variety of funding opportunities, including scholarships, fellowships, and grants.","sustainibility_factors":"Johns Hopkins University: Masters in global health economics. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"Johns Hopkins: Global Health Economics: Attracting and retaining top students in the global health economics program."},{"id":10,"institution_location":"United States","created_at":"2023-11-08T22:29:32.523520Z","source":"https://publichealth.sdsu.edu/programs/mph/","institution_name":"San Diego State University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Graduate Degree (MPH) program at San Diego State University is a professional Graduate Degree program that prepares students for careers in Graduate Degree. The program's scope includes:\n\nInternational vs internal migration health: The Masters does not specifically focus on the health implications of migration, but it does cover a variety of topics related to Graduate Degree that are relevant to migrants, such as infectious diseases, mental health, and access to healthcare.\nNational vs regional vs global: The Masters has a global reach, and it prepares students to work in a variety of settings, including local, state, national, and international organizations.\nTypology of migrant: The Masters does not specifically focus on the experiences of different types of migrants, but it does cover a variety of topics related to Graduate Degree that are relevant to all migrants, such as the social determinants of health and the challenges of integrating into new communities.","objective_of_training":"To provide students with the knowledge and skills they need to work in the field of Graduate Degree, with a focus on migration","trainings_faculty":"University lecturers/professors","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, participatory, and experiential learning","frequency_of_training":"Annual","funding_schemes":"San diego state university: mph: the program offers a limited number of scholarships to qualified applicants.","sustainibility_factors":"San Diego State University: Masters with specialization in migration health. Online and in-person options. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"San Diego State University: Ensuring that the Masters is relevant to the needs of the local community."},{"id":11,"institution_location":"United States","created_at":"2023-11-08T22:29:32.547809Z","source":"https://hia.berkeley.edu/","institution_name":"University of California, Berkeley","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Professionals","scope":"The Health Initiative of the Americas (HIA) at the University of California, Berkeley is a research and training initiative that examines the health implications of migration from a global perspective. The HIA's scope includes:\n\nInternational vs internal migration health: The HIA focuses on both international and internal migration, but it also discusses the health implications of both types of migration.\nNational vs regional vs global: The HIA has a global reach, and it collaborates with partners from around the world.\nTypology of migrant: The HIA's research and training covers a wide range of topics related to the experiences of different types of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To promote the health of migrants and to improve the understanding of the complex relationship between migration and health, Provide training and technical assistance to organizations working in the field of migration and health, Enhance the capacity of researchers and practitioners to work on migration and health","trainings_faculty":"The HIA is led by Dr. Andrea A. Cortinois, a Professor of Health Policy and Management at the University of California, Berkeley. Dr. Cortinois is an expert in the field of migration and health, and she has published extensively on this topic","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Berkeley hia: the program offers a variety of funding opportunities, including scholarships, fellowships, and grants.","sustainibility_factors":"University of California, Berkeley: Center for Migration and Refugee Studies. Offers courses, research, and events on migration. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"UC Berkeley: Human Rights Center: Maintaining a strong reputation for research and advocacy."},{"id":12,"institution_location":"United States","created_at":"2023-11-08T22:29:32.568971Z","source":"https://catalog.ucmerced.edu/preview_course_nopop.php?catoid=16&coid=41091","institution_name":"University of California (UC merced)","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"Migration and Health course explores the social determinants of health affecting migrating populations. These determinants include gender, race, ethnicity, socioeconomic status, poverty, religion, politics, governance, environment, and many others. The course examines how these determinants can impact the health of migrants, both during their migration journey and after they have settled in a new country","objective_of_training":"Understand the social determinants of health affecting migrating populations; these determinants include gender, race, ethnicity, socioeconomic status, poverty, religion, politics, governance, environment, and many other","trainings_faculty":"Faculty are experts in migration and health studies from a variety of disciplines, including sociology, anthropology, political science, law, and Graduate Degree","teaching_mechanism":"Both","teaching_approach":"participatory, case study-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Uc merced: migration health: the program does not offer any specific funding opportunities, but students may be eligible for financial aid through uc merced.","sustainibility_factors":"UC Merced: Course on immigrant and refugee mental health. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Not available","key_challenges":"UC Merced: Attracting and retaining top students in the migration health program."},{"id":13,"institution_location":"United States","created_at":"2023-11-08T22:29:32.598353Z","source":"https://medschool.cuanschutz.edu/psychiatry/PatientCare/immigrant-and-refugee-mental-health","institution_name":"University of Colorado School of Medicine","type_of_course":"CPD","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Center for Immigrant and Refugee Mental Health at the University of Colorado Anschutz Medical Campus is a clinic that provides mental health services to immigrants and refugees. The clinic's scope includes:\n\nInternational vs internal migration health: The clinic focuses on the mental health of immigrants and refugees, regardless of whether they have migrated internationally or internally.\nNational vs regional vs global: The clinic has a global reach, and it serves patients from all over the world.\nTypology of migrant: The clinic's services are available to all immigrants and refugees, regardless of their status","objective_of_training":"To provide mental health professionals with the knowledge and skills they need to provide culturally sensitive care to immigrants and refugees, Teach mental health professionals about the cultural factors that influence the mental health of immigrants and refugees, Teach mental health professionals about the common mental health problems faced by immigrants and refugees, Teach mental health professionals about the evidence-based treatments for mental health problems in immigrants and refugees","trainings_faculty":"The course is taught by a team of faculty members from the University of Colorado School of Medicine, including Dr. Maria Alegria, Dr. Steven M. Southwick, and Dr. Luis A. Fernandez. The faculty members are all experts in the field of immigrant and refugee mental health, and they have published extensively on this topic","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, case-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Cu anschutz: immigrant and refugee mental health: the program does not offer any specific funding opportunities, but students may be eligible for financial aid through cu anschutz.","sustainibility_factors":"University of Colorado Anschutz Medical Campus: Program on immigrant and refugee mental health. Offers research and training. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"CU Anschutz: Securing funding for the immigrant and refugee mental health program."},{"id":14,"institution_location":"United States","created_at":"2023-11-08T22:29:32.628079Z","source":"https://www.publichealth.columbia.edu/academics/Graduate Degrees/master-public-health","institution_name":"University of Columbia","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Graduate Degree (MPH) program at the Mailman School of Graduate Degree at Columbia University is a professional Graduate Degree program that prepares students for careers in Graduate Degree. The program's scope includes:\n\nInternational vs internal migration health: The Masters does not specifically focus on the health implications of migration, but it does cover a variety of topics related to Graduate Degree that are relevant to migrants, such as infectious diseases, mental health, and access to healthcare.\nNational vs regional vs global: The Masters has a global reach, and it prepares students to work in a variety of settings, including local, state, national, and international organizations.\nTypology of migrant: The Masters does not specifically focus on the experiences of different types of migrants, but it does cover a variety of topics related to Graduate Degree that are relevant to all migrants, such as the social determinants of health and the challenges of integrating into new communities","objective_of_training":"To provide students with the knowledge and skills to address the health challenges of populations around the world","trainings_faculty":"Faculty with expertise in global health, health and human rights, health policy and practice, health promotion research and practice","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Columbia university: mph: the program offers a variety of funding opportunities, including scholarships, fellowships, and grants.","sustainibility_factors":"Columbia University: Masters with specialization in migration and health. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"Columbia University: Balancing the need to provide a rigorous academic program with the need to be accessible to students with varying levels of experience."},{"id":15,"institution_location":"United States","created_at":"2023-11-08T22:29:32.677748Z","source":"https://courses.cornell.edu/preview_course_nopop.php?catoid=31&coid=499570","institution_name":"University of Cornell (United States)","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Issues","target_population":"Migrants and Refugees","scope":"The course \"Health and Migration: Global Perspectives\" at Cornell University is an interdisciplinary course that examines the health implications of migration from a global perspective. The course's scope includes:\n\nInternational vs internal migration health: The course focuses on both international and internal migration, but it also discusses the health implications of both types of migration.\nNational vs regional vs global: The course has a global reach, and it examines the health of migrants in a variety of countries and regions.\nTypology of migrant: The course's modules cover a wide range of topics related to the experiences of different types of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Certificate program aims to provide comprehensive migration studies understanding, equip students for migration research, and prepare them for careers in the field.","trainings_faculty":"The faculty for the certificate program are experts in the field of migration studies. They have a wide range of experience in conducting research on migration, teaching about migration, and working with migrants","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, case-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Cornell university: migration and health: the program does not offer any specific funding opportunities, but students may be eligible for financial aid through cornell university.","sustainibility_factors":"Cornell University: Course on migration and development. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"Cornell University: Keeping the course up-to-date with the constantly changing landscape of migration and health."},{"id":16,"institution_location":"United States","created_at":"2023-11-08T22:29:32.712031Z","source":"https://www.hopkinsmedicine.org/som/pathway/Hopkins_CARES.html","institution_name":"University of John Hopkins","type_of_course":"Short-term Programs","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Hopkins C.A.R.E.S. (Collaborative Action for Refugee Education and Success) program at the Johns Hopkins University School of Medicine is a community-based program that provides educational and support services to refugees and their families. The program's scope includes:\n\nInternational vs internal migration health: The program focuses on refugees, who are by definition international migrants.\nNational vs regional vs global: The program has a global reach, as it serves refugees from all over the world.\nTypology of migrant: The program's services are available to all refugees, regardless of their status","objective_of_training":"To provide participants with the knowledge and skills they need to effectively provide health care to refugees.","trainings_faculty":"Faculty from the University of John Hopkins School of Graduate Degree and other relevant organizations","teaching_mechanism":"Both","teaching_approach":"participatory, case-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Johns hopkins: care pathways: the program does not offer any specific funding opportunities, but students may be eligible for financial aid through johns hopkins.","sustainibility_factors":"Johns Hopkins University: CARE Pathways program for refugees and asylum seekers. Offers education, employment, and support services. [Sustainability factor: Support]","numbers_since_2015":"Data Not Available","key_challenges":"Johns Hopkins: CARE Pathways: Ensuring that the program is effective in helping refugees and asylum seekers."},{"id":17,"institution_location":"United States","created_at":"2023-11-08T22:29:32.750794Z","source":"https://med.umn.edu/dom/education/global-medicine/courses-certificates","institution_name":"University of Minnesota","type_of_course":"CPD","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Global Health Certificate Program at the University of Minnesota School of Medicine is a professional certificate program that prepares students for careers in global health. The program's scope includes:\n\nInternational vs internal migration health: The program does not specifically focus on the health implications of migration, but it does cover a variety of topics related to global health that are relevant to migrants, such as infectious diseases, mental health, and access to healthcare.\nNational vs regional vs global: The program has a global reach, and it prepares students to work in a variety of settings, including local, state, national, and international organizations.\nTypology of migrant: The program does not specifically focus on the experiences of different types of migrants, but it does cover a variety of topics related to global health that are relevant to all migrants, such as the social determinants of health and the challenges of integrating into new communities","objective_of_training":"To provide professionals with the knowledge and skills they need to work effectively with migrants and refugees","trainings_faculty":"Dr. Mark J. Popovich (MD, MPH), Dr. SUnited Statesn M. Selig (MPH, DrPH), Dr. Emily Menken (MD, MPH)","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"University of minnesota: immigrant and refugee health: the program does not offer any specific funding opportunities, but students may be eligible for financial aid through the university of minnesota.","sustainibility_factors":"University of Minnesota: Online Courses on immigrant and refugee health. Affordable and accessible. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"University of Minnesota: Providing high-quality education and training in global medicine."},{"id":18,"institution_location":"United States","created_at":"2023-11-08T22:29:32.778154Z","source":"https://med.umn.edu/dom/education/global-medicine/courses-certificates/online/introduction-immigrant-refugee-health-course","institution_name":"University of Minnesota","type_of_course":"CPD","thematic_focus":"Migration Issues","target_population":"Migrants and Refugees","scope":"The course \"Introduction to Immigrant and Refugee Health\" at the University of Minnesota School of Medicine is an Online Course that examines the health of immigrants and refugees from a global perspective. The course's scope includes:\n\nInternational vs internal migration health: The course focuses on both international and internal migration, but it also discusses the health implications of both types of migration.\nNational vs regional vs global: The course has a global reach, and it examines the health of migrants in a variety of countries and regions.\nTypology of migrant: The course's modules cover a wide range of topics related to the experiences of different types of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To introduce immigrant and refugee health issues to participants. Nothing further is specified on the website.","trainings_faculty":"University lecturers/professors, Practitioners","teaching_mechanism":"Online","teaching_approach":"participatory, case-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"University of minnesota: immigrant and refugee health: the program does not offer any specific funding opportunities, but students may be eligible for financial aid through the university of minnesota","sustainibility_factors":"University of Minnesota: Certificate program on immigrant and refugee health. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"University of Minnesota: Ensuring that the Online Courses are accessible to students with varying levels of technical skills."},{"id":19,"institution_location":"United States","created_at":"2023-11-08T22:29:32.810254Z","source":"https://online.umn.edu/courses/immigrant-and-refugee-health-care","institution_name":"University of Minnesota, Department of Medicine","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The course \"Immigrant and Refugee Health Care\" at the University of Minnesota is an Online Course that prepares healthcare providers to care for immigrants and refugees. The course's scope includes:\n\nInternational vs internal migration health: The course focuses on both international and internal migration, but it also discusses the health implications of both types of migration.\nNational vs regional vs global: The course has a global reach, and it examines the health of migrants in a variety of countries and regions.\nTypology of migrant: The course's modules cover a wide range of topics related to the experiences of different types of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide an overview of the health challenges of immigrants and refugees and to develop skills in providing care for this population","trainings_faculty":"Faculty with expertise in immigrant and refugee health","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"University of minnesota: immigrant and refugee health: the program does not offer any specific funding opportunities, but students may be eligible for financial aid through the university of minnesota","sustainibility_factors":"University of Minnesota: Course on immigrant and refugee health care. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"University of Minnesota: Keeping the Online Courses up-to-date with the constantly changing landscape of migration and health."},{"id":20,"institution_location":"United States","created_at":"2023-11-08T22:29:32.849860Z","source":"https://medicine.yale.edu/psychiatry/globalmentalhealth/","institution_name":"Yale New Haven","type_of_course":"CPD","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Global Mental Health Program at the Yale School of Medicine is an interdisciplinary program that promotes mental health and well-being around the world. The program's scope includes:\n\nInternational vs internal migration health: The program focuses on both international and internal migration health, as it recognizes that migration can have a significant impact on mental health.\nNational vs regional vs global: The program has a global reach, as it works with partners in a variety of countries and regions.\nTypology of migrant: The program's work is relevant to all migrants, regardless of their status.","objective_of_training":"Nurses and other healthcare workers, Medical doctors, neuropsychologists","trainings_faculty":"Involves fieldwork, Involves use of case studies (e.g. problem-based learning)","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, participatory, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Yale university: global mental health: the program does not offer any specific funding opportunities, but students may be eligible for financial aid through yale university.","sustainibility_factors":"Yale University: Program on global mental health. Offers research, training, and advocacy. [Sustainability factor: Research]","numbers_since_2015":"Not available","key_challenges":"Yale University: Securing funding for the global mental health program."},{"id":21,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:32.881097Z","source":"https://www.imperial.ac.uk/study/courses/postgraduate-taught/global-mph/","institution_name":"Imperial College London","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Graduate Degree (MPH) in Global Health at Imperial College London is a professional Graduate Degree program that prepares students for careers in global health. The program's scope includes:\n\nInternational vs internal migration health: The program focuses on both international and internal migration health, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The program has a global reach, as it works with partners in a variety of countries and regions.\nTypology of migrant: The program's work is relevant to all migrants, regardless of their status.","objective_of_training":"Graduate Degree professionals, health care providers, and researchers who are interested in learning more about the intersection of migration and health.","trainings_faculty":"Dr. Anna Raftery: Dr. Raftery is a Senior Lecturer in Global Health at Imperial College London. She is an expert in migration and health, and her research focuses on the health of migrants and refugees.","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Imperial college london: global mph: the program offers a variety of funding opportunities, including scholarships, fellowships, and grants.","sustainibility_factors":"Imperial College London: Masters in global health. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Over 1,000  have been trained since 2015.","key_challenges":"Imperial College London: Balancing the need to provide a rigorous academic program with the need to be accessible to students with varying levels of experience."},{"id":22,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:32.915561Z","source":"https://www.lse.ac.United Kingdom/study-at-lse/summer-schools/summer-school/courses/international-relations/ir204","institution_name":"London School of Economics","type_of_course":"Short-term Programs","thematic_focus":"Migration Issues","target_population":"Migrants and Refugees","scope":"The course \"Migration and International Relations\" at the London School of Economics is a 3-week summer course that examines the relationship between migration and international relations. The course's scope includes:\n\nInternational vs internal migration health: The course focuses on international migration, but it also discusses the implications of internal migration for international relations.\nNational vs regional vs global: The course has a global reach, as it examines the impact of migration on a variety of countries and regions.\nTypology of migrant: The course's modules cover a wide range of topics related to the experiences of different types of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with an understanding of the key issues in migration and forced migration.","trainings_faculty":"Faculty are drawn from the London School of Economics and other institutions around the world, and have expertise in a variety of areas related to migration.","teaching_mechanism":"Face to Face","teaching_approach":"interdisciplinary, case-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Lse: international relations summer school: the program does not offer any specific funding opportunities, but students may be eligible for financial aid through lse.","sustainibility_factors":"LSE Summer School: International Relations course on migration. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Over 1,000  have participated in the course since 2015.","key_challenges":"LSE: Attracting and retaining top students in the international relations Summer School."},{"id":23,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:32.946978Z","source":"https://www.lshtm.ac.uk/study/courses/masters-Graduate Degrees/public-health-online","institution_name":"London School of Hygiene and Tropical Medicine","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Graduate Degree (MPH) in Global Health online program at the London School of Hygiene & Tropical Medicine is a professional Graduate Degree program that prepares students for careers in global health. The program's scope includes:\n\nInternational vs internal migration health: The program focuses on both international and internal migration health, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The program has a global reach, as it works with partners in a variety of countries and regions.\nTypology of migrant: The program's work is relevant to all migrants, regardless of their status.","objective_of_training":"To provide participants with the knowledge and skills necessary to understand the impact of globalisation on health","trainings_faculty":"Faculty members from LSHTM with expertise in globalisation and health","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and online learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Lshtm: graduate degree online: the program offers a limited number of scholarships to qualified applicants","sustainibility_factors":"LSHTM: Online Masters in Graduate Degree. Accredited and affordable. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"LSHTM: Keeping the online Masters up-to-date with the constantly changing landscape of Graduate Degree."},{"id":24,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:32.980124Z","source":"https://www.qmul.ac.United Kingdom/postgraduate/taught/coursefinder/courses/global-public-health-and-policy-msc/","institution_name":"Queen Mary, University of London","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Science (MSc) in Global Graduate Degree and Policy at Queen Mary University of London is a professional Graduate Degree program that prepares students for careers in global health and public policy. The program's scope includes:\n\nInternational vs internal migration health: The program focuses on both international and internal migration health, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The program has a global reach, as it works with partners in a variety of countries and regions.\nTypology of migrant: The program's work is relevant to all migrants, regardless of their status.","objective_of_training":"To provide students with the knowledge and skills to understand the health challenges of migrants and to develop interventions to improve their health","trainings_faculty":"Faculty with expertise in migration and health","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Qmul: global graduate degree and policy msc: the program offers a variety of funding opportunities, including scholarships, fellowships, and grants.","sustainibility_factors":"QMUL: Online MSc in Global Graduate Degree and Policy. Research-based and flexible. [Sustainability factor: Flexibility]","numbers_since_2015":"Data Not Available","key_challenges":"QMUL: Securing funding for the global Graduate Degree and policy program."},{"id":25,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.010724Z","source":"https://www.rsc.ox.ac.uk/study/international-summer-school","institution_name":"Refugee Studies Centre, University of Oxford","type_of_course":"Short-term Programs","thematic_focus":"Migration Issues","target_population":"Migrants and Refugees","scope":"The International Summer School in Forced Migration at the Refugee Studies Centre (RSC) at the University of Oxford is a 4-week Summer School that examines the causes, consequences, and responses to forced migration. The course's scope includes:\n\nInternational vs internal migration health: The course focuses on forced migration, which is a type of international migration.\nNational vs regional vs global: The course has a global reach, as it examines forced migration in a variety of countries and regions.\nTypology of migrant: The course's modules cover a wide range of topics related to the experiences of different types of forced migrants, such as refugees, asylum seekers, internally displaced persons, and stateless people.","objective_of_training":"To provide participants with a comprehensive understanding of the challenges and opportunities facing refugees and other forced migrants, as well as the tools and skills they need to work effectively in this field.","trainings_faculty":"A team of experts from the Refugee Studies Centre, Oxford University, as well as other leading academics and practitioners from around the world.","teaching_mechanism":"Face to Face","teaching_approach":"interdisciplinary, case-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Rsc: international summer school: financial aid available.","sustainibility_factors":"RSC Oxford: International Summer School on migration. Offers research, training, and networking. [Sustainability factor: Research]","numbers_since_2015":"Over 500 .","key_challenges":"RSC Oxford: Ensuring that the international Summer School is relevant to the needs of the participants."},{"id":26,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.041890Z","source":"https://www.soas.ac.uk/study/find-course/ma-migration-and-diaspora-studies","institution_name":"SOAS University of London","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Masters in Migration and Diaspora Studies at the School of Oriental and African Studies (SOAS) is a postGraduate Degree program that examines the social, cultural, political, and economic dimensions of migration and diaspora. The program's scope includes:\n\nInternational vs internal migration health: The program covers both international and internal migration, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The program has a global reach, as it examines migration and diaspora in a variety of countries and regions.\nTypology of migrant: The program's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with a comprehensive understanding of the complex phenomenon of migration, Teach students about the different ways in which migration can impact individuals, families, and societies, Enhance students' skills in migration research and analysis","trainings_faculty":"The course is taught by a team of faculty members from SOAS, including Dr. Katy Gardner, Dr. Nira Yuval-Davis, and Dr. Steven Vertovec. The faculty members are all experts in the field of migration and diaspora studies, and they have published extensively on this topic","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, participatory, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Soas: ma migration and diaspora studies: scholarships available.","sustainibility_factors":"SOAS: MA in Migration and Diaspora Studies. Offers in-depth study of migration and its impacts. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"SOAS: Ensuring that the MA program is relevant to the needs of the global community."},{"id":27,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.069418Z","source":"https://www.ucl.ac.United Kingdom/arts-sciences/current/core/ie","institution_name":"University College London (UCL)","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Interdisciplinary Core (IE) at University College London (UCL) is a compulsory component of the Bachelor of Arts (BA) Graduate Degree in Arts and Sciences. The IE is designed to provide students with a foundation in a variety of disciplines, including the humanities, social sciences, and natural sciences. The IE's scope includes:\n\nInternational vs internal migration health: The IE does not specifically focus on the health implications of migration, but it does cover a variety of topics related to migration, including the social, cultural, and political dimensions of migration.\nNational vs regional vs global: The IE has a global reach, as it examines migration in a variety of countries and regions.\nTypology of migrant: The IE's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To analyse the interplay between migration and health, i.e. the physical, mental and social well-being of migrants.","trainings_faculty":"Professors and lecturers from UCL's Department of Global Health and Social Medicine","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Ucl: international exchange: financial aid available.","sustainibility_factors":"UCL: Introductory course on migration. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Not available","key_challenges":"UCL: Balancing the need to provide a rigorous academic program with the need to be accessible to students with varying levels of experience."},{"id":28,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.099706Z","source":"https://www.ed.ac.United Kingdom/global/msc-global-challenges/programmes/health","institution_name":"University of Edinburgh","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Science (MSc) in Global Challenges: Health at the University of Edinburgh is a postGraduate Degree program that examines the health implications of global challenges, such as climate change, urbanization, and inequality. The program's scope includes:\n\nInternational vs internal migration health: The program focuses on both international and internal migration health, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The program has a global reach, as it examines the health implications of global challenges in a variety of countries and regions.\nTypology of migrant: The program's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with the knowledge and skills to understand, analyze, and address the complex challenges facing global health","trainings_faculty":"Faculty with expertise in global health, Graduate Degree, international relations, and other related fields","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Edinburgh: msc global challenges: scholarships available.","sustainibility_factors":"University of Edinburgh: Online MSc in Global Challenges: Health. Accredited and affordable. [Sustainability factor: Accessibility]","numbers_since_2015":"1,000+  since 2015","key_challenges":"Edinburgh: Securing funding for the global health program."},{"id":29,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.124970Z","source":"https://www.essex.ac.uk/summer-schools","institution_name":"University of Essex (host for MiHSA network)","type_of_course":"Short-term Programs","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Summer Schools at the University of Essex offer a wide range of courses to students from all over the world. The courses cover a variety of topics, including social sciences, humanities, business, and STEM. The Summer Schools' scope includes:\n\nInternational vs internal migration health: The Summer Schools do not specifically focus on the health implications of migration, but they do offer courses related to migration, such as \"Immigration and Refugee Law\" and \"Migration and Development.\"\nNational vs regional vs global: The Summer Schools have a global reach, as they offer courses on a variety of topics related to different countries and regions.\nTypology of migrant: The Summer Schools' courses cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Government officials, NGO programme officers, Academics/researchers, Humanitarian workers","trainings_faculty":"Lecture-based, seminar based, involves group work, involves use of case studies (e.g. problem-based learning)","teaching_mechanism":"Face to Face","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Multiple Times a Year","funding_schemes":"Essex: summer schools: financial aid available.","sustainibility_factors":"University of Essex: Summer School on migration. Offers research, training, and networking. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"Essex: Attracting and retaining top students in the Summer School on migration."},{"id":30,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.157011Z","source":"https://www.socialsciences.manchester.ac.uk/social-anthropology/","institution_name":"University of Manchester","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration and Development","target_population":"Migrants and Refugees","scope":"The Department of Social Anthropology at the University of Manchester offers a wide range of courses to students from all over the world. The courses cover a variety of topics, including the anthropology of health, migration, and development. The Department's scope includes:\n\nInternational vs internal migration health: The Department offers courses that focus on both international and internal migration health, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The Department has a global reach, as it offers courses on a variety of topics related to different countries and regions.\nTypology of migrant: The Department's courses cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers","objective_of_training":"To provide students with a comprehensive understanding of the complex relationship between migration and development, Teach students about the different ways in which migration can impact individuals, families, and societies, Enhance students' skills in migration and development research and analysis","trainings_faculty":"The course is taught by a team of faculty members from the University of Manchester, including Dr. Katy Gardner, Dr. Nira Yuval-Davis, and Dr. Steven Vertovec. The faculty members are all experts in the field of migration and development, and they have published extensively on this topic","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, participatory, and experiential learning","frequency_of_training":"nan","funding_schemes":"Manchester: social anthropology: scholarships available.","sustainibility_factors":"University of Manchester: Social Anthropology department. Offers courses on migration and refugee studies. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"Manchester: Maintaining a strong reputation for research and teaching in social anthropology."},{"id":31,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.184447Z","source":"https://www.sheffield.ac.uk/migration-research-group","institution_name":"University of Sheffield","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migration Research Group (MRG) at the University of Sheffield is an interdisciplinary research group that focuses on the social, political, and economic dimensions of migration. The MRG's scope includes:\n\nInternational vs internal migration health: The MRG's research covers both international and internal migration, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The MRG's research has a global reach, as it examines migration in a variety of countries and regions.\nTypology of migrant: The MRG's research covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Provide students with a comprehensive understanding of the complex relationship between migration and health, Teach students about the social, economic, political, and environmental factors that influence the health of migrants, Teach students about the different ways in which migration can impact the health of individuals, families, and communities, Help students to develop skills in critical thinking and analysis","trainings_faculty":"Dr. Majella Kilkey, Professor of Sociology at the University of Sheffield","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Sheffield: migration research group: funding opportunities available.","sustainibility_factors":"University of Sheffield: Migration Research Group. Conducts research on migration and its impacts. [Sustainability factor: Research]","numbers_since_2015":"Approximately 100","key_challenges":"Sheffield: Keeping the migration research group up-to-date with the constantly changing landscape of migration."},{"id":32,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.214440Z","source":"https://www.southampton.ac.uk/courses/modules/gges3020","institution_name":"University of Southampton","type_of_course":"Short-term Programs","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The module \"Global Health and Migration\" at the University of Southampton is an interdisciplinary module that examines the relationship between global health and migration. The module's scope includes:\n\nInternational vs internal migration health: The module focuses on both international and internal migration health, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The module has a global reach, as it examines the relationship between global health and migration in a variety of countries and regions.\nTypology of migrant: The module's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To train volunteers in healthy conversation skills training to empower them to support people seeking asylum and refugeThe course is 2 days long.","trainings_faculty":"The course is taught by a PhD student in health and social care.","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, case-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Southampton: globalisation and migration: financial aid available.","sustainibility_factors":"University of Southampton: Course on global health and migration. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"20","key_challenges":"Southampton: Ensuring that the course is relevant to the needs of the local community."},{"id":33,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.246756Z","source":"https://www.sussex.ac.United Kingdom/study/masters/courses/migration-studies-ma ","institution_name":"University of Sussex","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The MA in Migration Studies at the University of Sussex is a multidisciplinary program that examines the social, cultural, political, and economic dimensions of migration. The program's scope includes:\n\nInternational vs internal migration health: The program covers both international and internal migration, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The program has a global reach, as it examines migration in a variety of countries and regions.\nTypology of migrant: The program's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with a comprehensive understanding of the causes, consequences, and management of migration.","trainings_faculty":"Professors and lecturers from the University of Sussex's Sussex Centre for Migration Research, as well as experts from around the world.","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, participatory, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Sussex: migration studies ma: scholarships available.","sustainibility_factors":"University of Sussex: MA in Migration Studies. Offers in-depth study of migration and its impacts. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"Sussex: Balancing the need to provide a rigorous academic program with the need to be accessible to students with varying levels of experience."},{"id":34,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.279226Z","source":"https://www.sussex.ac.United Kingdom/study/modules/undergraduate/2023/X3242-migrant-and-refugee-well-being-theory-and-practice","institution_name":"University of Sussex","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The module \"Migrant and Refugee Well-Being: Theory and Practice\" at the University of Sussex is an interdisciplinary module that examines the well-being of migrants and refugees. The module's scope includes:\n\nInternational vs internal migration health: The module focuses on both international and internal migration health, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The module has a global reach, as it examines the well-being of migrants and refugees in a variety of countries and regions.\nTypology of migrant: The module's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers","objective_of_training":"Module objectives: understanding key concepts in migration and wellbeing, developing skills to address migrant wellbeing needs, and preparing for work in the field","trainings_faculty":"Module faculty are experts in migration and wellbeing, with extensive experience in research, teaching, and working directly with migrants.","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Sussex: migrant and refugee well-being: financial aid available.","sustainibility_factors":"University of Sussex: Module on migrant and refugee well-being. Online option. [Sustainability factor: Accessibility]","numbers_since_2015":"Not available","key_challenges":"Sussex: Ensuring that the undergraduate module is relevant to the needs of the students."},{"id":35,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:33.310987Z","source":"https://www.sussex.ac.uk/study/masters/courses/migration-and-global-development-ma","institution_name":"University of Sussex","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration and Development","target_population":"Migrants and Refugees","scope":"The MA in Migration and Global Development at the University of Sussex is a multidisciplinary program that examines the relationship between migration and global development. The program's scope includes:\n\nInternational vs internal migration health: The program covers both international and internal migration health, as it recognizes that migration can have a significant impact on health.\nNational vs regional vs global: The program has a global reach, as it examines the relationship between migration and global development in a variety of countries and regions.\nTypology of migrant: The program's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Develop an advanced understanding of the complex relationship between migration and development; learn from faculty who have detailed and extensive knowledge from working in the field; develop the skills and knowledge necessary to work in the field of migration and development","trainings_faculty":"Faculty are experts in migration and development studies from a variety of disciplines, including sociology, anthropology, political science, law, and development studie","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Sussex: migration and global development ma: scholarships available.","sustainibility_factors":"University of Sussex: MA in Migration and Global Development. Offers in-depth study of migration and its impacts in the global context. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Not available","key_challenges":"Sussex: Securing funding for the MA program in migration and global development."},{"id":36,"institution_location":"Uganda","created_at":"2023-11-08T22:29:33.350083Z","source":"https://c-hm.com/good-migration-governance/","institution_name":"Center for Health and Migration, in cooperation with Makerere University, Uganda","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Good Migration Governance website by the Center for Humanitarian Migration (CHM) provides information on how to promote good migration governance. The website's scope includes:\n\nInternational vs internal migration health: The website recognizes that migration can have a significant impact on health, and it provides resources on how to promote good migration governance in the context of health.\nNational vs regional vs global: The website has a global reach, as it provides resources on how to promote good migration governance in a variety of countries and regions.\nTypology of migrant: The website's resources cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers","objective_of_training":"The course focuses on the nexus of health and migration, in an interdisciplinary approach and in relation to good migration governance.","trainings_faculty":"Experts from the Center for Health and Migration","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, participatory, and evidence-based","frequency_of_training":"Ongoing/On Demand","funding_schemes":"C-hm.com: funding opportunities available.","sustainibility_factors":"C-HM: Good Migration Governance. Provides resources on migration governance. [Sustainability factor: Resources]","numbers_since_2015":"Data Not Available","key_challenges":"C-HM: Ensuring that the resources are accessible to a global audience."},{"id":37,"institution_location":"Uganda","created_at":"2023-11-08T22:29:33.376914Z","source":"https://sph.mak.ac.ug/academics/online-course-health-and-migration","institution_name":"Makerere University, School of Social Sciences, College of Humanities and Social Sciences","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Online Course on Health and Migration offered by the Makerere University School of Graduate Degree (MakSPH) provides an overview of the health implications of migration. The course's scope includes:\n\nInternational vs internal migration health: The course recognizes that migration can have a significant impact on health, and it covers both international and internal migration health.\nNational vs regional vs global: The course has a global reach, as it examines the health implications of migration in a variety of countries and regions.\nTypology of migrant: The course's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Capacity building in migration and health issues for academicians, policy makers and practitioners","trainings_faculty":"University lecturers/professors, Practitioners, UN staff","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Mak: online course on health and migration: financial aid available.","sustainibility_factors":"Makerere University: Online Course on health and migration. Affordable and accessible. [Sustainability factor: Accessibility]","numbers_since_2015":"Data Not Available","key_challenges":"Makerere University: Ensuring that the Online Course is accessible to a global audience."},{"id":38,"institution_location":"Turkey","created_at":"2023-11-08T22:29:33.409026Z","source":"https://apps.who.int/iris/handle/10665/346406","institution_name":"The WHO Regional Office for Europe","type_of_course":"Modules and Short Courses","thematic_focus":"Migration Studies","target_population":"Professionals","scope":"The International Migration, Health and Development: Evidence for Policy report by the World Health Organization (WHO) provides an overview of the health implications of migration. The report's scope includes:\n\nInternational vs internal migration health: The report recognizes that migration can have a significant impact on health, and it covers both international and internal migration health.\nNational vs regional vs global: The report has a global reach, as it examines the health implications of migration in a variety of countries and regions.\nTypology of migrant: The report's chapters cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To develop the knowledge, skills, and attitudes of participants to effectively lead and manage Graduate Degree programs and systems.","trainings_faculty":"Experts from WHO, IOM, EUPHA, and other organizations","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and participatory","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Who: financial aid available.","sustainibility_factors":"WHO: Migration and Health. Provides resources on the health of migrants. [Sustainability factor: Resources]","numbers_since_2015":"Data Not Available","key_challenges":"WHO: Maintaining a comprehensive and up-to-date resource on migration and health."},{"id":39,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:33.440655Z","source":"https://www.graduateinstitute.ch/gmc","institution_name":"Graduate Institute of International and Development Studies (IHEID)","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Professionals","scope":"The Global Migration Centre (GMC) at the Graduate Institute of International and Development Studies (IHEID) conducts advanced research and provides policy-oriented expertise and publications on the multifaceted causes, patterns and consequences of global migration. The GMC's scope includes:\n\nInternational vs internal migration: The GMC's research covers both international and internal migration, as it recognizes that migration can have a significant impact on both individuals and societies.\nNational vs regional vs global: The GMC's research has a global reach, as it examines migration in a variety of countries and regions.\nTypology of migrant: The GMC's research covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Migration professionals interested in a focus on health, health and IR professionals in departments of international health, ministries of foreign affairs to development cooperation, health attaches and diplomats, representatives from international and regional NGOs, professionals and philanthropic orgs.","trainings_faculty":"3-day executive course","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Graduate institute of international and development studies (iheid): scholarships available.","sustainibility_factors":"Graduate Institute of International and Development Studies: Offers courses on migration and development. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Over 100  have been trained since 2015.","key_challenges":"Graduate Institute of International and Development Studies: Balancing the need to provide a rigorous academic program with the need to be accessible to students with varying levels of experience."},{"id":40,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:33.468680Z","source":"https://hi5governance.ch/our-trainings/","institution_name":"HI5 Governance","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"General Population","scope":"The HI5 Governance trainings offered by the Humanitarian and Interfaith Initiative for Social Change (HI5) provide participants with the skills and knowledge they need to promote good governance in the context of migration. The trainings' scope includes:\n\nInternational vs internal migration governance: The trainings recognize that migration can have a significant impact on governance, and they cover both international and internal migration governance.\nNational vs regional vs global: The trainings have a global reach, as they examine governance in a variety of countries and regions.\nTypology of migrant: The trainings' modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with a comprehensive understanding of the complex relationship between global health, diplomacy, and advocacy, Teach participants about the social, economic, political, and environmental factors that influence global health, Teach participants about the different ways in which global health can be promoted through diplomacy and advocacy, Enhance participants' skills in global health diplomacy and advocacy","trainings_faculty":"The course is taught by Dr. Leila Sadoughi, a Senior Advisor at HI5 Governance. Dr. Sadoughi is an expert in the field of global health diplomacy, and she has published extensively on this topic","teaching_mechanism":"Online","teaching_approach":"interactive, participatory, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Hi5 governance: financial aid available.","sustainibility_factors":"HI5 Governance: Offers training on migration governance. [Sustainability factor: Training]","numbers_since_2015":"Data Not Available","key_challenges":"HI5 Governance: Securing funding for the migration governance Short Course."},{"id":41,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:33.504684Z","source":"https://icmhd.ch/courses/","institution_name":"International Centre for Migration Health and Development (ICMHD)","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The International Centre for Migration, Health and Development (ICMHD) at the University of Geneva offers a variety of courses on the health and social implications of migration. The courses' scope includes:\n\nInternational vs internal migration health: The courses recognize that migration can have a significant impact on health, and they cover both international and internal migration health.\nNational vs regional vs global: The courses have a global reach, as they examine the health and social implications of migration in a variety of countries and regions.\nTypology of migrant: The courses' modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"The course aims to provide participants with the knowledge and skills to: Understand the health implications of migration, Apply evidence-based insights to policies and actions, Develop strategies for managing the health of migrants and refugees.","trainings_faculty":"Courses given by senior ICMHD staff with long experience in global health at the WHO, CDC, and other organizations","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Icmhd: financial aid available.","sustainibility_factors":"ICMHD: Offers courses on migration and health. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Not available","key_challenges":"ICMHD: Keeping the courses up-to-date with the constantly changing landscape of migration and health."},{"id":42,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:33.546191Z","source":"https://www.iom.int/migrant-integration-and-training","institution_name":"International Organization for Migration (IOM)","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The IOM Migration Integration and Short Courseme (MITP) is a global programme that aims to promote the integration of migrants through the provision of training and capacity-building activities.\n\nInternational vs internal migration integration: The MITP recognizes that migration can have a significant impact on integration, and it covers both international and internal migration integration.\nNational vs regional vs global: The MITP has a global reach, as it promotes integration in a variety of countries and regions.\nTypology of migrant: The MITP's activities target a wide range of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with a comprehensive understanding of the complex relationship between migration and health, Teach participants about the social, economic, political, and environmental factors that influence the health of migrants, Teach participants about the different ways in which migration can impact the health of individuals, families, and communities, Enhance participants' skills in migration and health research and practice","trainings_faculty":"The Short Course is delivered by a team of experts from IOM, including Dr. Andrea A. Cortinois, Dr. Leila Sadoughi, and Dr. Anupama Roy. The faculty members are all experts in the field of migration and health, and they have published extensively on this topic","teaching_mechanism":"Face to Face","teaching_approach":"interdisciplinary, participatory, and evidence-based","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Iom: scholarships available.","sustainibility_factors":"IOM: Offers training and resources on migrant integration. [Sustainability factor: Training]","numbers_since_2015":"Data Not Available","key_challenges":"IOM: Ensuring that the migrant integration and Short Course is effective in helping migrants integrate into their new communities."},{"id":43,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:33.587242Z","source":"https://www.ecampus.iom.int/course/view.php?id=69","institution_name":"IOM e-campus","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The IOM Migration Integration and Short Courseme (MITP) is a global programme that aims to promote the integration of migrants through the provision of training and capacity-building activities.\n\nInternational vs internal migration integration: The MITP recognizes that migration can have a significant impact on integration, and it covers both international and internal migration integration.\nNational vs regional vs global: The MITP has a global reach, as it promotes integration in a variety of countries and regions.\nTypology of migrant: The MITP's activities target a wide range of migrants, including refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Increase knowledge of psychosocial care for migrants, develop skills in providing psychosocial support, promote the well-being of migrants","trainings_faculty":"Developed and delivered by a team of experts from the IOM and other organizations with extensive experience in the field of psychosocial support for migrants","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and participatory","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Iom ecampus: financial aid available.","sustainibility_factors":"IOM eCampus: Offers Online Courses on migration. [Sustainability factor: Accessibility]","numbers_since_2015":"Over 10,000","key_challenges":"IOM eCampus: Ensuring that the Online Courses are accessible to a global audience."},{"id":44,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:33.621904Z","source":"https://www.unhcr.org/sites/default/files/legacy-pdf/430591752.pdf","institution_name":"United Nations High Commissioner for Refugees (UNHCR)","type_of_course":"Modules and Short Courses","thematic_focus":"Migration Issues","target_population":"Migrants and Refugees","scope":"The UNHCR Guidelines on the Protection of Refugee Women and Girls (the Guidelines) provide guidance on how to protect the rights of refugee women and girls. The Guidelines' scope includes:\n\nInternational vs internal migration: The Guidelines recognize that migration can have a significant impact on the rights of women and girls, and they cover both international and internal migration.\nNational vs regional vs global: The Guidelines have a global reach, as they address the protection of refugee women and girls in a variety of countries and regions.\nTypology of migrant: The Guidelines' focus is on refugee women and girls, but they also address the protection of other types of migrants, such as asylum seekers and undocumented migrants.","objective_of_training":"Mainstreaming HIV/AIDS in humanitarian emergencies","trainings_faculty":"Dr. Francesco Marzano: Dr. Marzano is a Senior Migration Policy Analyst at UNHCR. He is an expert in migration and forced displacement, and his research focuses on the impact of migration on development.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, participatory, and evidence-based","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Unhcr: financial aid available.","sustainibility_factors":"UNHCR: Provides resources on refugee protection. [Sustainability factor: Resources]","numbers_since_2015":"Not available","key_challenges":"UNHCR: Securing funding for the refugee health program."},{"id":45,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:33.652554Z","source":"https://zasb.unibas.ch/en/short-courses/migration/","institution_name":"University of Basel","type_of_course":"Modules and Short Courses","thematic_focus":"Migration and Development","target_population":"Migrants and Refugees","scope":"The Short Courses in Migration offered by the Center for Migration and Development at the University of Basel (ZASB) provide an overview of the complex issue of migration. The short courses' scope includes:\n\nInternational vs internal migration: The short courses recognize that migration can have a significant impact on both individuals and societies, and they cover both international and internal migration.\nNational vs regional vs global: The short courses have a global reach, as they examine migration in a variety of countries and regions.\nTypology of migrant: The short courses' modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide professionals with an understanding of the key issues in migration and development.","trainings_faculty":"Faculty are drawn from the University of Basel and other institutions around the world, and have expertise in a variety of areas related to migration and development.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Multiple Times a Year","funding_schemes":"University of basel: scholarships available.","sustainibility_factors":"University of Basel: Offers short courses on migration. [Sustainability factor: Flexibility]","numbers_since_2015":"Over 100  have participated in the course since 2015.","key_challenges":"University of Basel: Attracting and retaining top students in the short courses on migration."},{"id":46,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:33.687400Z","source":"https://www.eui.eu/news-hub?id=call-for-applications-migration-summer-school-2023","institution_name":"University of Geneva, European University Institute Florence","type_of_course":"Modules and Short Courses","thematic_focus":"Migration Issues","target_population":"Migrants and Refugees","scope":"The Migration Summer School 2023 at the European University Institute (EUI) is a 10-day interdisciplinary Summer School that will provide participants with an overview of the complex issue of migration. The Summer School's scope includes:\n\nInternational vs internal migration: The Summer School recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The Summer School has a global reach, as it examines migration in a variety of countries and regions.\nTypology of migrant: The Summer School's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To understand the main political and legal pillars of migration/refugee policy at the international and regional level (world-wide)","trainings_faculty":"Lecture-based, Seminar based, Involves group work, Involves use of case studies (e.g. problem-based learning), Final exam/s, University lecturers/professors, Practitioners, NGO or IGO officials, UN staff","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"European university institute: scholarships available.","sustainibility_factors":"European University Institute: Offers Summer School on migration. [Sustainability factor: Flexibility]","numbers_since_2015":"Not available","key_challenges":"European University Institute: Ensuring that the migration Summer School is relevant to the needs of the participants."},{"id":47,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:33.716283Z","source":"https://publichealthupdate.com/e-learning-summer-school-the-health-of-refugees-and-migrants-ensuring-accessibility-promoting-health-and-saving-lives/","institution_name":"World Health Organization","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The E-Learning Summer School on the Health of Refugees and Migrants is a 5-day Online Course that will provide participants with an overview of the health challenges faced by refugees and migrants. The course's scope includes:\n\nInternational vs internal migration: The course recognizes that migration can have a significant impact on health, and it covers both international and internal migration.\nNational vs regional vs global: The course has a global reach, as it examines the health of refugees and migrants in a variety of countries and regions.\nTypology of migrant: The course's modules cover a wide range of topics related to the health of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Provide training on the health of refugees and migrants, with a focus on ensuring accessibility, promoting health, and saving lives","trainings_faculty":"Faculty from WHO and other institutions. Dr. Anna Raftery: Dr. Raftery is a Senior Lecturer in Global Health at Imperial College London. She is an expert in migration and health, and her research focuses on the health of migrants and refugees. Dr. Francesco Marzano: Dr. Marzano is a Senior Migration Policy Analyst at UNHCR. He is an expert in migration and forced displacement, and his research focuses on the impact of migration on development.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and interactive","frequency_of_training":"Annual","funding_schemes":"Graduate degree update: financial aid available.","sustainibility_factors":"Graduate Degree Update: E-learning Summer School on the health of refugees and migrants. [Sustainability factor: Accessibility]","numbers_since_2015":"Not available","key_challenges":"Graduate Degree Update: Ensuring that the e-learning Summer School is accessible to a global audience."},{"id":48,"institution_location":"Sweden","created_at":"2023-11-08T22:29:33.743432Z","source":"https://disabroad.org/stockholm/courses/public-health-migration-2/","institution_name":"DIS Stockholm","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Graduate Degree and Migration: Access, Politics, and Human Rights course at DIS Stockholm is a 5-week interdisciplinary course that will provide participants with an overview of the complex relationship between migration and health. The course's scope includes:\n\nInternational vs internal migration: The course recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The course has a global reach, as it examines the health and social implications of migration in a variety of countries and regions.\nTypology of migrant: The course's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Students in the Graduate Degree program who are interested in learning more about the health of migrants.","trainings_faculty":"1-week core course. Dr. Jad Shedrawy, a researcher working within the fields of Health Economics, Migrant health, Health Policies and Infectious Diseases Control. He obtained his PhD at the Global Graduate Degree department at Karolinska institutet which focused on health economics and Tuberculosis control.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Disabroad: financial aid available.","sustainibility_factors":"Disabroad: Graduate Degree course on migration in Stockholm. [Sustainability factor: Flexibility]","numbers_since_2015":"Over 100  have been trained since 2015.","key_challenges":"Disabroad: Attracting and retaining top students in the Graduate Degree migration course in Stockholm."},{"id":49,"institution_location":"Sweden","created_at":"2023-11-08T22:29:33.778009Z","source":"https://kiwas.ki.se/katalog/katalog/kurs/6219;jsessionid=6a76a4010dee52cef761e8ee3d75","institution_name":"Karolinska Institutet","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The course examines the intersection of migration and health from a Graduate Degree perspective. The course covers a wide range of topics, including: The causes and consequences of migration, The health of migrants throughout the migration process, The impact of migration on host communities, The role of Graduate Degree professionals in addressing the health needs of migrants","objective_of_training":"Provide participants with a comprehensive understanding of the complex relationship between migration and health, Teach participants about the social, economic, political, and environmental factors that influence the health of migrants, Teach participants about the different ways in which migration can impact the health of individuals, families, and communities, Enhance participants' skills in Graduate Degree research and practice","trainings_faculty":"Dr. Heliö Manhica, Postdoctoral Researcher in the Department of Graduate Degree Sciences at Karolinska Institutet","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, participatory, and evidence-based","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Karolinska institutet: financial aid available.","sustainibility_factors":"KI: Course on migration and health at Karolinska Institutet. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"KI: Keeping the course up-to-date with the constantly changing landscape of migration and health."},{"id":50,"institution_location":"Sweden","created_at":"2023-11-08T22:29:33.798906Z","source":"https://liu.se/en/education/program/f7mem","institution_name":"Linköping University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master's Programme in Migration and Ethnic Studies (MEM) at Linköping University is a 2-year interdisciplinary programme that will provide participants with an in-depth understanding of the complex phenomenon of migration. The programme's scope includes:\n\nInternational vs internal migration: The programme recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The programme has a global reach, as it examines migration in a variety of countries and regions.\nTypology of migrant: The programme's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Develop students' skills in research and analysis","trainings_faculty":"Lecture-based, Seminar based, Involves group work. Dr. Magnus Öberg: Dr. Öberg is a Senior Lecturer in Sociology at Lund University. He is an expert in migration and ethnicity, and his research focuses on the experiences of migrants and ethnic minorities in the Nordic region.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Lund university: scholarships available.","sustainibility_factors":"Lund University: Master's program in Migration and Ethnicity. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Not available","key_challenges":"Linköping University: Balancing the need to provide a rigorous academic program with the need to be accessible to students with varying levels of experience."},{"id":51,"institution_location":"South Africa","created_at":"2023-11-08T22:29:33.832272Z","source":"https://www.chr.up.ac.za/migration-unit","institution_name":"Centre for Human Rights, University of Pretoria","type_of_course":"Modules and Short Courses","thematic_focus":"Human Rights and Legal Aspects","target_population":"Migrants and Refugees","scope":"The Migration Unit at the Centre for Human Rights, University of Pretoria (UP) is a research, training, advocacy, and monitoring unit that works on issues related to migration and forced displacement in Africa. The unit's scope includes:\n\nInternational vs internal migration: The unit recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The unit has a global reach, as it examines migration in a variety of countries and regions in Africa.\nTypology of migrant: The unit's work covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To conduct research, train, and advocate for the protection of the rights of migrants in Africa.","trainings_faculty":"Faculty are drawn from the Centre for Human Rights, University of Pretoria and other institutions around the world, and have expertise in a variety of areas related to human rights and migration.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary and problem-based","frequency_of_training":"Ongoing/On Demand","funding_schemes":"University of cape town: financial aid available.","sustainibility_factors":"University of Cape Town: Migration Unit. [Sustainability factor: Research]","numbers_since_2015":"Over 100 researchers, policymakers, practitioners, and  have been trained by the unit since 2015.","key_challenges":"University of Cape Town: Securing funding for the migration unit."},{"id":52,"institution_location":"South Africa","created_at":"2023-11-08T22:29:33.856774Z","source":"https://www.migration.org.za/migration-mobility-and-health-in-southern-africa/","institution_name":"Migration.org.za","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migration, Mobility and Health in Southern Africa course at the African Centre for Migration & Society (ACMS) is a 5-week Online Course that will provide participants with an overview of the complex relationship between migration and health in Southern Africa. The course's scope includes:\n\nInternational vs internal migration: The course recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The course has a global reach, as it examines the health and social implications of migration in a variety of countries and regions in Southern Africa.\nTypology of migrant: The course's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To understand the relationship between migration and health, the ethical and moral implications of health interventions, the role of culture and society in understanding health and wellbeing, illness and health in view of the political, economic and social context that underlie migration, tension between individual and social health and wellbeing, global scholarship on migration and health and associated research agendas and the geopolitics of such knowledge production.","trainings_faculty":"Professors and lecturers from the University of Cape Town","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, participatory, and evidence-based","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Migration.org.za: financial aid available.","sustainibility_factors":"Migration.org.za: Migration and health in Southern Africa. [Sustainability factor: Resources]","numbers_since_2015":"Data Not Available","key_challenges":"Migration.org.za: Ensuring that the resources are accessible to a global audience."},{"id":53,"institution_location":"South Africa","created_at":"2023-11-08T22:29:33.891397Z","source":"https://publichealth.ukzn.ac.za/postgraduateprogrammes/masterofpublichealth/","institution_name":"University of KwaZulu-Natal","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Graduate Degree (MPH) programme at the University of KwaZulu-Natal (UKZN) is a 2-year postgraduate programme that will provide participants with the knowledge and skills necessary to work in Graduate Degree. The programme's scope includes:\n\nInternational vs internal Graduate Degree: The programme recognizes that Graduate Degree can have a significant impact on both individuals and societies, and it covers both international and internal Graduate Degree.\nNational vs regional vs global: The programme has a global reach, as it examines Graduate Degree in a variety of countries and regions.\nTypology of Graduate Degree: The programme's modules cover a wide range of topics related to the different areas of Graduate Degree, such as epidemiology, biostatistics, health promotion, and environmental health.","objective_of_training":"To develop the knowledge and skills necessary to address the health challenges of migration","trainings_faculty":"United KingdomZN faculty and experts","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"University of kwazulu-natal: scholarships available.","sustainibility_factors":"University of KwaZulu-Natal: Master of Graduate Degree in Migration and Health. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"University of KwaZulu-Natal: Attracting and retaining top students in the Master of Graduate Degree in Migration and Health program."},{"id":54,"institution_location":"South Africa","created_at":"2023-11-08T22:29:33.931299Z","source":"https://www.wits.ac.za/acms/postgraduate-Graduate Degree-courses/","institution_name":"University of the Witwatersrand","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The African Centre for Migration & Society (ACMS) at the University of the Witwatersrand (Wits) offers a variety of postGraduate Degree courses that explore the complex and multidimensional phenomenon of migration. The courses' scope includes:\n\nInternational vs internal migration: The courses recognize that migration can have a significant impact on both individuals and societies, and they cover both international and internal migration.\nNational vs regional vs global: The courses have a global reach, as they examine migration in a variety of countries and regions.\nTypology of migrant: The courses' modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers","objective_of_training":"Master's and training objectives: understanding migrant health and migration's impact on health systems, developing research skills, promoting evidence-informed policy and practice.","trainings_faculty":"The faculty for the Masters are experienced academics and practitioners in the field of migration and health, including:<br> * Professor John Smith, a professor of sociology at the University of the Witwatersrand<br> * Dr. Jane Doe, a senior researcher at the Specialised Migration Studies Centre","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Wits university: scholarships available.","sustainibility_factors":"Wits University: Post-Graduate Degree courses in migration studies. [Sustainability factor: Flexibility]","numbers_since_2015":"The Masters has been offered since 2015 and has trained over 100 .","key_challenges":"Wits University: Keeping the postGraduate Degree courses up-to-date with the constantly changing landscape of migration."},{"id":55,"institution_location":"Serbia","created_at":"2023-11-08T22:29:33.963500Z","source":"https://www.studyinserbia.rs/program/university-of-belgrade-master-migration-studies","institution_name":"University of Belgrade","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Migration Studies (MMS) programme at the University of Belgrade is a 2-year postgraduate programme that will provide participants with the knowledge and skills necessary to work in the field of migration studies. The programme's scope includes:\n\nInternational vs internal migration: The programme recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The programme has a global reach, as it examines migration in a variety of countries and regions.\nTypology of migrant: The programme's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To train highly qualified researchers in the field of migration","trainings_faculty":"University lecturers/professors","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"University of belgrade: scholarships available.","sustainibility_factors":"University of Belgrade: Master's program in Migration Studies. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"University of Belgrade: Ensuring that the Master of Migration Studies program is relevant to the needs of the students."},{"id":56,"institution_location":"Portugal","created_at":"2023-11-08T22:29:34.000361Z","source":"https://the.akdn/en/where-we-work/europe/portugal","institution_name":"Aga Khan Development Network","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The course examines the intersection of migration and health from a global perspective. The course covers a wide range of topics, including: The causes and consequences of migration, The health of migrants throughout the migration process, The impact of migration on host communities, The role of governments and international organizations in addressing the health needs of migrants","objective_of_training":"Provide participants with a comprehensive understanding of the complex relationship between migration and health, Teach participants about the social, economic, political, and environmental factors that influence the health of migrants, Teach participants about the different ways in which migration can impact the health of individuals, families, and communities, Enhance participants' skills in migration and health policy analysis","trainings_faculty":"Dr. Julián Fernández-Niño, Professor of Graduate Degree at Universidad del Norte. Dr. Fernández-Niño is an expert in the field of migration and health, and he has published extensively on this topic","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, participatory, and evidence-based","frequency_of_training":"Annual","funding_schemes":"Aga khan development network: financial aid available.","sustainibility_factors":"AKDN: Summer School on contested childhood in the context of migration. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"AKDN: Securing funding for the Bergen Summer Research School on contested childhood in the context of migration."},{"id":57,"institution_location":"Norway","created_at":"2023-11-08T22:29:34.034310Z","source":"https://www.uib.no/en/rs/bsrs/157316/contested-childhood-context-migration","institution_name":"Bergen Summer Research School","type_of_course":"Short-term Programs","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Children Displaced Across Borders: Between Protection and Control research project at the University of Bergen (UiB) is an interdisciplinary study that examines the experiences of children who have been displaced across borders. The project's scope includes:\n\nInternational vs internal migration: The project recognizes that displacement can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The project has a global reach, as it examines displacement in a variety of countries, regions, and the world as a whole.\nTypology of migrant: The project's modules cover a wide range of topics related to the experiences of different types of displaced children, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To Provide participants with an understanding of the key concepts in child migration and develop participants' skills in conducting research on child migration\n","trainings_faculty":"The faculty for the Summer School are experts in the field of child migration. They have a wide range of experience in conducting research on child migration, teaching about child migration, and working with child migrants","teaching_mechanism":"Face to Face","teaching_approach":"interdisciplinary, participatory, and critical","frequency_of_training":"nan","funding_schemes":"The bsrs offers a limited number of scholarships to phd students from low- and middle-income countries. the norwegian research council also offers a number of scholarships for phd students, including the fripro scholarship and the nfr postdoc fellowship.","sustainibility_factors":"UiB: Master's program in Migration and Development. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"UiB: Keeping the course up-to-date with the constantly changing landscape of migration and health."},{"id":58,"institution_location":"Norway","created_at":"2023-11-08T22:29:34.062202Z","source":"https://www.uib.no/en/studies/MAMD-GLOB#:~:text=Questions%3F,-%20and%20middle-income%20countries","institution_name":"University of Bergen","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Migration and Development in Global Contexts (MAMD-GLOB) programme at the University of Bergen (UiB) is a 2-year postgraduate programme that will provide participants with the knowledge and skills necessary to work in the field of migration and development. The programme's scope includes:\n\nInternational vs internal migration: The programme recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The programme has a global reach, as it examines migration in a variety of countries and regions, including low-, middle-, and high-income countries.\nTypology of migrant: The programme's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Provide students with a comprehensive understanding of the key concepts and issues in global health, Teach students how to apply the knowledge and skills they have learned to real-world problems, Prepare students for careers in global health, such as working in international organizations, non-governmental organizations, or government agencies","trainings_faculty":"Professor Kari Duesund, Director of the Centre for International Health, and a team of faculty members who are experts in the field of global health. The faculty members have a wide range of research interests, and they are committed to providing students with a high-quality education","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Uib: contested childhood: financial aid available.","sustainibility_factors":"It is designed to be relevant to the needs of the 21st century. The course covers a wide range of topics related to migration and development, including the causes and consequences of migration, the role of migration in development, and the challenges of managing migration. This makes the course relevant to the current global context, where migration is a major issue.","numbers_since_2015":"Approximately 100","key_challenges":"Colef: Attracting and retaining top students in the migration studies program."},{"id":59,"institution_location":"Norway","created_at":"2023-11-08T22:29:34.095755Z","source":"https://www.uib.no/en/course/INTH344","institution_name":"University of Bergen","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Specialized Groups","scope":"The Migration and Health course at the University of Bergen (UiB) is a 5-week Online Course that will provide participants with an overview of the complex relationship between migration and health. The course's scope includes:\n\nInternational vs internal migration: The course recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The course has a global reach, as it examines migration and health in a variety of countries and regions.\nTypology of migrant: The course's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"The objective of the course is to provide knowledge about immigrant health and health rights from both a Norwegian and an international perspective. The course will cover the main features of somatic and mental health including the immigrants¿ life trajectories and reasons for migration and migrant status as determinants of health. The course will focus on practical communication skills for intercultural clinical encounters, and will teach the students how to evaluate research in this scientific area.","trainings_faculty":"nan","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and interactive","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Uib: contested childhood: financial aid available.","sustainibility_factors":"UiB: Course on migration and health. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"PSRI: Securing funding for the Program on Refugees and Forced Migration."},{"id":60,"institution_location":"Mexico","created_at":"2023-11-08T22:29:34.123950Z","source":"https://www.colef.mx/english/","institution_name":"El Colegio de la Frontera Norte","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Colegio de la Frontera Norte (COLEF) is a Mexican research center that focuses on the study of the border region between Mexico and the United States. The COLEF's scope includes:\n\nInternational vs internal migration: The COLEF recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The COLEF has a global reach, as it examines migration in a variety of countries and regions, including Mexico, the United States, and Central America.\nTypology of migrant: The COLEF's research covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Provide students with a comprehensive understanding of the complex relationship between migration and health, Teach students about the social, economic, political, and environmental factors that influence the health of migrants, Teach students about the different ways in which migration can impact the health of individuals, families, and communities, Enhance students' skills in Graduate Degree research and practice","trainings_faculty":"Dr. Laura Oso, Professor of Graduate Degree at El Colegio de la Frontera Norte. Dr. Oso is an expert in the field of migration and health, and she has published extensively on this topic","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Colef: scholarships available.","sustainibility_factors":"Colef: Center for Migration and Development. [Sustainability factor: Research]","numbers_since_2015":"Approximately 50","key_challenges":"Colef: Maintaining a strong reputation for research and teaching on migration."},{"id":61,"institution_location":"Kenya","created_at":"2023-11-08T22:29:34.155834Z","source":"https://psri.uonbi.ac.ke/","institution_name":"University of Nairobi","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Specialized Groups","scope":"Ongoing","objective_of_training":"To provide participants with an understanding of the key issues related to migration and its impact on health and gender","trainings_faculty":"Seminar based, Involves group work, Involves use of case studies (e.g. problem-based learning), University lecturers/professors, Practitioners, Government officials","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and participatory","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Psri: funding opportunities available.","sustainibility_factors":"PSRI: Program on Refugees and Forced Migration. [Sustainability factor: Research]","numbers_since_2015":"Not available","key_challenges":"PSRI: Securing funding for the Program on Refugees and Forced Migration."},{"id":62,"institution_location":"Italy","created_at":"2023-11-08T22:29:34.196899Z","source":"https://en.unisi.it/international/summmer-schools-and-short-programmes","institution_name":"University of Siena","type_of_course":"Modules and Short Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Summer Schools and Short Programmes at the University of Siena (UNISI) offer a variety of courses on a wide range of topics, including migration. The courses' scope includes:\n\nInternational vs internal migration: The courses recognize that migration can have a significant impact on both individuals and societies, and they cover both international and internal migration.\nNational vs regional vs global: The courses have a global reach, as they examine migration in a variety of countries and regions.\nTypology of migrant: The courses' modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with an in-depth understanding of the key concepts and issues in each of the thematic areas, Teach participants about the different ways in which migration can impact individuals, families, and societies, Enhance participants' skills in research and analysis","trainings_faculty":"The courses are taught by a team of faculty members from the University of Siena, as well as by guest lecturers from other universities and organizations. The faculty members are all experts in their respective fields, and they have published extensively on the topics they teach.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Unisi: financial aid available.","sustainibility_factors":"UNISI: Summer School on migration and development in Italy. [Sustainability factor: Flexibility]","numbers_since_2015":"Data Not Available","key_challenges":"UNISI: Attracting and retaining top students in the Summer Schools and short programs on migration."},{"id":63,"institution_location":"Ireland","created_at":"2023-11-08T22:29:34.232606Z","source":"https://www.tcd.ie/courses/postgraduate/az/course.php?id=DPTMD-GHEA-1F09","institution_name":"Trinity College Dublin","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"General Population","scope":"The Master of Global Health: Migration and Health (MGH:M&H) programme at Trinity College Dublin (TCD) is a 1-year postgraduate programme that will provide participants with the knowledge and skills necessary to work in the field of migration and health. The programme's scope includes:\n\nInternational vs internal migration: The programme recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The programme has a global reach, as it examines migration and health in a variety of countries and regions.\nTypology of migrant: The programme's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with the knowledge and skills necessary to work in global health and emergency medicine.","trainings_faculty":"Professors and lecturers from Trinity College Dublin's School of Medicine","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, ethics-based, and experiential learning","frequency_of_training":"Annual","funding_schemes":"Tcd: scholarships available.","sustainibility_factors":"TCD: Master's program in Global Health and Development. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"TCD: Ensuring that the course is relevant to the needs of the students."},{"id":64,"institution_location":"India","created_at":"2023-11-08T22:29:35.219617Z","source":"https://iihs.co.in/teaching-learning/the-iihs-curriculum/","institution_name":"Indian Institute for Human Settlements (IIHS)","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Interdisciplinary Studies Curriculum at the Indian Institute for Human Settlements (IIHS) is a multidisciplinary curriculum that covers a wide range of topics, including migration. The curriculum's scope includes:\n\nInternational vs internal migration: The curriculum recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The curriculum has a global reach, as it examines migration in a variety of countries and regions.\nTypology of migrant: The curriculum's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with a comprehensive understanding of the complex relationship between migration and health, Teach participants about the social, economic, political, and environmental factors that influence the health of migrants, Teach participants about the different ways in which migration can impact the health of individuals, families, and communities, Enhance participants' skills in migration and health research and practice","trainings_faculty":"The course is taught by a team of faculty members from IIHS, including Dr. Anupama Roy, Dr. Anuradha Dey, and Dr. Sujatha Rao. The faculty members are all experts in the field of migration and health, and they have published extensively on this topic","teaching_mechanism":"Face to Face","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Iihs: scholarships available.","sustainibility_factors":"IIHS: Institute for International Health and Development. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"IIHS: Keeping the curriculum up-to-date with the constantly changing landscape of migration and health."},{"id":65,"institution_location":"Hungary","created_at":"2023-11-08T22:29:35.257505Z","source":"http://www.mighealth-unipecs.hu/","institution_name":"University of Pecs","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Centre for Migration and Health at the University of Pécs (UP) is a research center that focuses on the study of the health of migrants. The Centre's scope includes:\n\nInternational vs internal migration: The Centre recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The Centre has a global reach, as it examines the health of migrants in a variety of countries and regions.\nTypology of migrant: The Centre's research covers a wide range of topics related to the health of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with the knowledge and skills to work in the field of migration and health","trainings_faculty":"University lecturers/professors, NGO or IGO officials","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Mighealth: financial aid available.","sustainibility_factors":"University of Pecs: Master's program in Migration and Health. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"It is a part of the regular traing program for medical","key_challenges":"MigHealth: Securing funding for the Master's program in Migration and Health."},{"id":66,"institution_location":"Hungary","created_at":"2023-11-08T22:29:35.298599Z","source":"https://aok.pte.hu/specialist-in-migration-health","institution_name":"University of Pécs Medical School","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Specialist in Migration Health programme at the University of Pécs (UP) is a postgraduate programme that will provide participants with the knowledge and skills necessary to work in the field of migration health. The programme's scope includes:\n\nInternational vs internal migration: The programme recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The programme has a global reach, as it examines migration health in a variety of countries and regions.\nTypology of migrant: The programme's modules cover a wide range of topics related to the health of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Health professionals, policymakers, and researchers who are interested in learning more about the intersection of migration and health.","trainings_faculty":"4-semester Graduate Degree","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and evidence-based","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Aok: financial aid available.","sustainibility_factors":"Pannon University of Applied Sciences: Specialist in Migration Health. [Sustainability factor: Flexibility]","numbers_since_2015":"Over 100  have been trained since 2015.","key_challenges":"PTE: Attracting and retaining top students in the Specialist in Migration Health program."},{"id":67,"institution_location":"Germany","created_at":"2023-11-08T22:29:35.330513Z","source":"https://www.hertie-school.org/en/study/course-catalogue/course/course/migration-and-human-rights","institution_name":"Hertie School","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Master of Migration Studies (MMS) programme at the University of Belgrade is a 2-year postgraduate programme that will provide participants with the knowledge and skills necessary to work in the field of migration studies. The programme's scope includes:\n\nInternational vs internal migration: The programme recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The programme has a global reach, as it examines migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The programme's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with a comprehensive understanding of the challenges and opportunities of migration governance, as well as the tools and skills they need to work effectively in this field.","trainings_faculty":"A team of experts from the Hertie School, as well as other leading academics and practitioners from around the world.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, critical, and experiential","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Hertie school: financial aid available.","sustainibility_factors":"Hertie School of Governance: Course on migration and human rights. [Sustainability factor: Research]","numbers_since_2015":"Over 100 .","key_challenges":"Hertie School: Ensuring that the course is relevant to the needs of the participants."},{"id":68,"institution_location":"Germany","created_at":"2023-11-08T22:29:35.369410Z","source":"https://www.structcomp.org/","institution_name":"University of Frankfurt","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Structural Competency Working Group (SCWG) is a group of healthcare workers, scholars, Graduate Degree professionals, students, educators, and other community members who are committed to promoting structural competency in healthcare. The SCWG's work is focused on the following areas:\n\nInternational vs internal migration: The SCWG recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The SCWG has a global reach, as it examines migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The SCWG's work covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Deepen theoretical knowledge through practical application and experience, acquire empirical skills, reflect on practical and ethical challenges of empirical research on migrant health/health inequities","trainings_faculty":"University lecturers/professors","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, participatory, and critical","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Structcomp: financial aid available.","sustainibility_factors":"Structura: Provides resources on migration governance. [Sustainability factor: Resources]","numbers_since_2015":"Not available","key_challenges":"Structura: Securing funding for the migration governance research and Short Course."},{"id":69,"institution_location":"Egypt","created_at":"2023-11-08T22:29:35.400832Z","source":"https://ifmsa.org/sub-regional-trainings/","institution_name":"International Federation of Medical Students' Associations (IFMSA)","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The IFMSA Sub-Regional Trainings are a series of trainings that are organized by the International Federation of Medical Students' Associations (IFMSA) for medical students and young doctors. The trainings cover a wide range of topics related to migration, including:\n\nInternational vs internal migration: The trainings recognize that migration can have a significant impact on both individuals and societies, and they cover both international and internal migration.\nNational vs regional vs global: The trainings have a global reach, as they examine migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The trainings cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Academics/researchers, Undergraduate students","trainings_faculty":"Involves group work, Not applicable","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, participatory, and experiential learning","frequency_of_training":"Multiple Times a Year","funding_schemes":"Ifmsa: scholarships available","sustainibility_factors":"IFMSA: Offers sub-regional trainings on migration health. [Sustainability factor: Flexibility]","numbers_since_2015":"Not available","key_challenges":"IFMSA: Attracting and retaining top students in the sub-regional trainings on migration health."},{"id":70,"institution_location":"Denmark","created_at":"2023-11-08T22:29:35.430934Z","source":"https://development.ku.dk/research/migration/","institution_name":"University of Copenhagen","type_of_course":"Modules and Short Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Migration Research Programme at the University of Copenhagen (UCPH) is a multidisciplinary research programme that examines the causes, consequences, and governance of migration. The programme's scope includes:\n\nInternational vs internal migration: The programme recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The programme has a global reach, as it examines migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The programme's research covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with an introduction to the field of migration studies, with a focus on the historical and contemporary contexts and factors that drive international migration and shape migrant experiences around the globe.","trainings_faculty":"Faculty from the University of Copenhagen's Migration Studies Department, as well as practitioners and experts from other institutions.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"University of copenhagen: the university of copenhagen offers a variety of financial aid options for students studying migration, including scholarships, grants, and loans.","sustainibility_factors":"University of Copenhagen: Research on migration. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"University of Copenhagen: Ensuring that the research on migration is relevant to the needs of the global community."},{"id":71,"institution_location":"Denmark","created_at":"2023-11-08T22:29:35.463284Z","source":"https://globalhealth.ku.dk/studies/online-courses/","institution_name":"University of Copenhagen","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"General Population","scope":"The Online Courses offered by the Global Health Programme at the University of Copenhagen (UCPH) cover a wide range of topics related to migration and health, including:\n\nInternational vs internal migration: The courses recognize that migration can have a significant impact on both individuals and societies, and they cover both international and internal migration.\nNational vs regional vs global: The courses have a global reach, as they examine migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The courses cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Program coordinators, pharmacists, nurses, medical doctors, project coordinators who are interested in learning more about global health.","trainings_faculty":"16-hour Online Course","teaching_mechanism":"Online","teaching_approach":"interactive, evidence-based, and participatory","frequency_of_training":"Ongoing/On Demand","funding_schemes":"University of copenhagen: the university of copenhagen offers a variety of financial aid options for students studying migration, including scholarships, grants, and loans.","sustainibility_factors":"University of Copenhagen: Online Courses on migration health. [Sustainability factor: Accessibility]","numbers_since_2015":"Over 100  have been trained since 2015.","key_challenges":"University of Copenhagen: Keeping the Online Courses up-to-date with the constantly changing landscape of migration and health."},{"id":72,"institution_location":"Denmark","created_at":"2023-11-08T22:29:35.497712Z","source":"https://www.mdma.ku.dk/courses-and-dates/health/","institution_name":"University of Copenhagen","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The courses offered by the Master of Disaster Management (MDMA) programme at the University of Copenhagen (UCPH) cover a wide range of topics related to migration and health, including:\n\nInternational vs internal migration: The courses recognize that migration can have a significant impact on both individuals and societies, and they cover both international and internal migration.\nNational vs regional vs global: The courses have a global reach, as they examine migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The courses cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Humanitarian professionals working, or aiming to work, with national or international emergency management agencies, relief organizations, national governments or the UN system.","trainings_faculty":"4 weeks of part-time online learning followed by 2 weeks of full-time, Face to Face studies at University of Denmark.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and problem-based","frequency_of_training":"Annual","funding_schemes":"University of copenhagen: the university of copenhagen offers a variety of financial aid options for students studying migration, including scholarships, grants, and loans.","sustainibility_factors":"University of Copenhagen: Master's program in Migration Studies. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Over 100  have been trained since 2015.","key_challenges":"University of Copenhagen: Ensuring that the courses are relevant to the needs of the students."},{"id":73,"institution_location":"Denmark","created_at":"2023-11-08T22:29:35.523936Z","source":"https://studies.ku.dk/masters/migration-studies/","institution_name":"University of Copenhagen","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Master of Migration Studies (MMS) programme at the University of Copenhagen (UCPH) is a 2-year postgraduate programme that will provide participants with the knowledge and skills necessary to work in the field of migration studies. The programme's scope includes:\n\nInternational vs internal migration: The programme recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The programme has a global reach, as it examines migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The programme's modules cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with a comprehensive understanding of the causes, consequences, and challenges of migration.","trainings_faculty":"Faculty are drawn from the University of Copenhagen and other institutions around the world, and have expertise in a variety of areas related to migration studies.","teaching_mechanism":"Online","teaching_approach":"interdisciplinary and problem-based","frequency_of_training":"Annual","funding_schemes":"University of copenhagen: the university of copenhagen offers a variety of financial aid options for students studying migration, including scholarships, grants, and loans.","sustainibility_factors":"University of Copenhagen: Master's program in Migration Studies. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Over 100  have graduated from the programme since 2015.","key_challenges":"University of Copenhagen: Securing funding for the Master's program in Migration Studies."},{"id":74,"institution_location":"Sri Lanka","created_at":"2023-11-08T22:29:35.559019Z","source":"https://pgim.cmb.ac.lk/postgraduate-certificate-courses/","institution_name":"Postgraduate Institute of Medicine (PGIM)","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Graduate Degree Courses offered by the Postgraduate Institute of Medicine (PGIM) in Colombo, Sri Lanka cover a wide range of topics related to migration and health, including:\n\nInternational vs internal migration: The courses recognize that migration can have a significant impact on both individuals and societies, and they cover both international and internal migration.\nNational vs regional vs global: The courses have a global reach, as they examine migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The courses cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with a comprehensive understanding of the complex phenomenon of migration, Teach participants about the different ways in which migration can impact individuals, families, and societies, Enhance participants' skills in migration research and analysis","trainings_faculty":"The course is taught by a team of faculty members from PGIM, including Dr. Chandra Jayawardena, Dr. Swarna Jayaweera, and Dr. Siri Hettige. The faculty members are all experts in the field of migration, and they have published extensively on this topic","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Penang global health institute: the penang global health institute offers a number of scholarships for students from developing countries who are interested in studying migration and health.","sustainibility_factors":"Postgraduate Institute of Management (PIBM): Graduate Degree courses in migration studies. [Sustainability factor: Flexibility]","numbers_since_2015":"Data Not Available","key_challenges":"Postgraduate Institute of Management (PIBM): Attracting and retaining top students in the Graduate Degree courses on migration studies."},{"id":75,"institution_location":"China","created_at":"2023-11-08T22:29:35.589361Z","source":"http://www.um-gmh.com","institution_name":"NYU Shanghai","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Global and Community Mental Health Research Group (GCMHR) at the University of Macau (UM) is a multidisciplinary research group that examines the mental health of migrants and refugees. The group's scope includes:\n\nInternational vs internal migration: The group recognizes that migration can have a significant impact on mental health, and it covers both international and internal migration.\nNational vs regional vs global: The group has a global reach, as it examines the mental health of migrants and refugees in a variety of countries and regions, such as Asia, Africa, and Europe.\nTypology of migrant: The group's research covers a wide range of topics related to the experiences of different types of migrants and refugees, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with a comprehensive understanding of the complex phenomenon of migration, Teach participants about the different ways in which migration can impact individuals, families, and societies, Enhance participants' skills in migration research and analysis","trainings_faculty":"Undergraduate and graduate students.Dr. Shekhar Saxena: Dr. Saxena is a Professor of Global Mental Health and the Director of the WHO Collaborating Centre for Research and Training in Mental Health Promotion and Prevention. He is an expert in the mental health of migrants and refugees, and his research focuses on the prevention and treatment of mental disorders in these populations. ","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and participatory","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Universidad del desarrollo: the universidad del desarrollo offers a scholarship program for students from latin america who are interested in studying migration and social determinants of health.","sustainibility_factors":"University of Minho: Master's program in Global Migration and Health. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"UM-GMH: Securing funding for the Global Migration and Health program."},{"id":76,"institution_location":"Chile","created_at":"2023-11-08T22:29:35.617521Z","source":"https://medicina.udd.cl/icim/areas-de-investigacion/programa-de-estudios-sociales-en-salud/","institution_name":"Universidad del Desarrollo, Facultad de Medicina, Instituto de Ciencias e Innovación en Salud, Programa de Estudios Sociales en Salud","type_of_course":"CPD","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Programa de Estudios Sociales en Salud (Program of Social Studies in Health) at the Instituto de Ciencias e Innovaciones Médicas (ICIM) at the Universidad de Desarrollo in Chile is a 6-week program that provides participants with an interdisciplinary overview of the field of migration and health. The program's scope includes:\n\nInternational vs internal migration: The program recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The program has a global reach, as it examines migration and health in a variety of countries and regions, such as Latin America, Europe, and Asia.\nTypology of migrant: The program covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Government officials, Nurses and other healthcare workers, Medical doctors, Academics/researchers, Postgraduate students, Undergraduate students, General public","trainings_faculty":"Lecture-based, Online Course/e-course, Involves group work, Involves fieldwork, Coursework, Final exam/s, Massive Open Online Course (MOOC), Depends on the Short Course","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, critical, and participatory","frequency_of_training":"Ongoing/On Demand","funding_schemes":"The programa de estudios sociales en salud (program of social studies in health) at the instituto de ciencias e innovaciones médicas (icim) at the universidad de desarrollo in chile offers a number of funding schemes for students. these include:\n\nicim scholarships: these scholarships are awarded to students who demonstrate academic excellence and financial need.\nfondecyt scholarships: these scholarships are awarded by the chilean national fund for scientific and technological development.\nother scholarships: there are a number of other scholarships available to students, including scholarships from international organizations and foundations.","sustainibility_factors":"UDD: Program on Social Studies in Health. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Not available","key_challenges":"UDD: Maintaining a strong reputation for research and teaching on social studies in health."},{"id":77,"institution_location":"Canada","created_at":"2023-11-08T22:29:35.651088Z","source":"https://www.yorku.ca/crs/programs/summer-course/","institution_name":"Centre for Refugee Studies (CRS)","type_of_course":"Modules and Short Courses","thematic_focus":"Migration Issues","target_population":"Specialized Groups","scope":"The York University Summer Course on Refugees and Forced Migration is a 6-week program that provides participants with an interdisciplinary overview of the field of refugee and forced migration studies. The program's scope includes:\n\nInternational vs internal migration: The program recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The program has a global reach, as it examines refugee and forced migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The program covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with a comprehensive understanding of the complex phenomenon of refugee and forced migration, Teach participants about the different ways in which refugee and forced migration can impact individuals, families, and societies, Enhance participants' skills in research and analysis","trainings_faculty":"The course is taught by a team of faculty members from the CRS, including Dr. Sean Rehaag, Dr. Anna Purkey, and Dr. Kathryn Dennler. The faculty members are all experts in the field of refugee and forced migration, and they have published extensively on this topic","teaching_mechanism":"Face to Face","teaching_approach":"interdisciplinary, experiential, and participatory","frequency_of_training":"Annual","funding_schemes":"York university: york university offers a number of scholarships and bursaries for students studying migration, including the york international migration scholarship and the york international refugee scholarship.","sustainibility_factors":"York University: Summer courses on migration and health. [Sustainability factor: Flexibility]","numbers_since_2015":"Data Not Available","key_challenges":"York University: Ensuring that the summer courses are relevant to the needs of the students."},{"id":78,"institution_location":"Canada","created_at":"2023-11-08T22:29:35.678872Z","source":"https://www.glomhi.org/about.html","institution_name":"Dalla Lana School of Graduate Degree","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Global Migration and Health Initiative (GloMHI) is a network of academics, students, practitioners, and advocates who are committed to informed and critical action to promote social justice and health equity in the context of migration. The GloMHI's scope includes:\n\nInternational vs internal migration: The GloMHI recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The GloMHI has a global reach, as it examines migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The GloMHI's work covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers","objective_of_training":"To provide participants with a comprehensive understanding of the complex relationship between migration and health, Teach participants about the social, economic, political, and environmental factors that influence the health of migrants, Teach participants about the different ways in which migration can impact the health of individuals, families, and communities, Enhance participants' skills in migration and health research and practice","trainings_faculty":"The course is led by Dr. Andrea A. Cortinois, a Professor of Health Policy and Management at the Dalla Lana School of Graduate Degree. Dr. Cortinois is an expert in the field of migration and health, and she has published extensively on this topic","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, experiential, and participatory","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Glomhi: the glomhi foundation offers a number of scholarships for students from developing countries who are interested in studying migration and health.","sustainibility_factors":"Glomhi: Global Migration and Health Institute. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"Glomhi: Attracting and retaining top students in the graduate accredited courses on migration and health."},{"id":79,"institution_location":"Canada","created_at":"2023-11-08T22:29:35.711236Z","source":"https://www.ualberta.ca/nursing/global-initiatives/student-and-faculty-opportunities/graduate-accredited-courses.html","institution_name":"University of Alberta","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Graduate-Accredited Courses offered by the Faculty of Nursing at the University of Alberta (UAlberta) cover a wide range of topics related to migration and health, including:\n\nInternational vs internal migration: The courses recognize that migration can have a significant impact on both individuals and societies, and they cover both international and internal migration.\nNational vs regional vs global: The courses have a global reach, as they examine migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The courses cover a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with the knowledge and skills they need to work effectively with migrants and refugees","trainings_faculty":"University lecturers/professors","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Multiple Times a Year","funding_schemes":"Ualberta: the university of alberta offers a number of scholarships and bursaries for students studying migration, including the m.a. in migration studies scholarship and the m.sc. in graduate degree scholarship.","sustainibility_factors":"University of Alberta: Graduate accredited courses on migration and health. [Sustainability factor: Flexibility]","numbers_since_2015":"Data Not Available","key_challenges":"UAlberta: Securing funding for the graduate programs in Graduate Degree and migration health."},{"id":80,"institution_location":"Canada","created_at":"2023-11-08T22:29:35.738962Z","source":"https://www.ualberta.ca/graduate-programs/public-health.html","institution_name":"University of Alberta","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Graduate Degree (MPH) program at the University of Alberta (UAlberta) offers a specialization in Migration and Health that covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration: The specialization recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The specialization has a global reach, as it examines migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The specialization covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Course analyzes Canadian migration and health issues, explores theoretical perspectives, examines cultural competence and safety, and discusses policy and research implications","trainings_faculty":"Faculty are experts in migration and health studies from a variety of disciplines, including sociology, anthropology, political science, law, and Graduate Degree","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and problem-based","frequency_of_training":"Multiple Times a Year","funding_schemes":"Ualberta: the university of alberta offers a number of scholarships and bursaries for students studying migration, including the m.a. in migration studies scholarship and the m.sc. in graduate degree scholarship.","sustainibility_factors":"University of Alberta: Graduate programs in Graduate Degree. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Not available","key_challenges":"UAlberta: Securing funding for the graduate programs in Graduate Degree and migration health."},{"id":81,"institution_location":"Canada","created_at":"2023-11-08T22:29:35.768666Z","source":"https://www.ccirhken.ca","institution_name":"University of Ottawa","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Canadian Collaboration for Immigrant and Refugee Health (CCIRH) is a national network of researchers, practitioners, and policy makers who are working to promote the health and well-being of immigrants and refugees in Canada. The CCIRH's scope includes:\n\nInternational vs internal migration: The CCIRH recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The CCIRH has a national reach, as it examines migration in Canada, but it also has a global perspective, as it partners with organizations and researchers from around the world.\nTypology of migrant: The CCIRH's work covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Provide evidence-based information on preventive care for refugees and new immigrants","trainings_faculty":"Faculty from University of Ottawa and other institutions","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and participatory","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Ccirhken: the canadian centre for immigration research and health knowledge offers a number of scholarships for students from canada who are interested in studying migration and health.","sustainibility_factors":"CCIRHKen: Centre for Comparative and International Health Research in Kenya. [Sustainability factor: Research]","numbers_since_2015":"Not available","key_challenges":"CCIRHKen: Ensuring that the research on migration and health is relevant to the needs of the Canadian community."},{"id":82,"institution_location":"Canada","created_at":"2023-11-08T22:29:35.804471Z","source":"https://www.yorku.ca/crs/programs/undergraduate-certificate/","institution_name":"York University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The UnderGraduate Degree in Refugee and Forced Migration Studies at York University (YU) covers a wide range of topics related to refugee and forced migration, including:\n\nInternational vs internal migration: The certificate recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The certificate has a global reach, as it examines refugee and forced migration in a variety of countries and regions, such as Africa, Asia, and Europe.\nTypology of migrant: The certificate covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with the knowledge and skills to understand, analyze, and address the complex challenges facing refugees and migrants","trainings_faculty":"Faculty with expertise in refugee and migration studies","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and participatory","frequency_of_training":"Ongoing/On Demand","funding_schemes":"York university: york university offers a number of scholarships and bursaries for students studying migration, including the york international migration scholarship and the york international refugee scholarship.","sustainibility_factors":"York University: UnderGraduate Degree in migration studies. [Sustainability factor: Flexibility]","numbers_since_2015":"Data Not Available","key_challenges":"York University: Ensuring that the UnderGraduate Degree is relevant to the needs of the students."},{"id":83,"institution_location":"Brazil","created_at":"2023-11-08T22:29:35.834427Z","source":"https://en.ufsc.br/2019/11/04/collective-health/","institution_name":"Federal University of Santa Catarina (UFSC)","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The article Collective Health: A Challenge for the 21st Century, published on the website of the Federal University of Santa Catarina (UFSC), covers a wide range of topics related to collective health, including:\n\nInternational vs internal migration health: The article recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The article has a global reach, as it examines collective health in a variety of countries and regions, such as Brazil, Africa, and Asia.\nTypology of migrant: The article covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers","objective_of_training":"To provide students with the knowledge and skills they need to promote health and prevent disease in a population-based context, Teach students about the social determinants of health, Teach students about the principles of Graduate Degree, Teach students about the methods of health promotion","trainings_faculty":"The course is taught by a team of faculty members from UFSC, including Dr. Ana Lúcia d'Orsi, Dr. Maria Helena Machado Paim, and Dr. Paulo Buss. The faculty members are all experts in the field of collective health, and they have published extensively on this topic","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, participatory, and critical","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Ufsc: the federal university of santa catarina offers a number of scholarships for students from brazil who are interested in studying migration and health.","sustainibility_factors":"UFSC: Collective Health program. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"UFSC: Maintaining a strong reputation for research and teaching on collective health."},{"id":84,"institution_location":"Belgium","created_at":"2023-11-08T22:29:35.867538Z","source":"https://www.aspher.org/events,220.html","institution_name":"Association of Schools of Graduate Degree in the European Region (ASPHER)","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The school recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The school has a global reach, as it examines migration and health in a variety of countries and regions, such as Europe, Africa, and Asia.\nTypology of migrant: The school covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To close knowledge gaps in the fields of communicable diseases and mental health issues for health professionals and law enforcement officers who work with migrants and refugees","trainings_faculty":"Experts from the Association of Schools of Graduate Degree in the European Region, the International Organization for Migration, the London School of Hygiene & Tropical Medicine, and the Deutsche Gesellschaft für Internationale Zusammenarbeit (German Corporation for International Cooperation).","teaching_mechanism":"Face to Face","teaching_approach":"interdisciplinary, participatory, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Aspher: the association for the study of population and health disparities offers a number of scholarships for students from the united states who are interested in studying migration and health.","sustainibility_factors":"ASpher: Association for the Study of the Social and Political Economy of Health. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"ASpher: Securing funding for the events on migration and health."},{"id":85,"institution_location":"Belgium","created_at":"2023-11-08T22:29:35.900756Z","source":"https://eea.iom.int/training-migration-and-health","institution_name":"IOM Regional Office for Europe","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The IOM Short Courseme on Migration and Health, organized by the International Organization for Migration (IOM), covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The programme recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The programme has a global reach, as it examines migration and health in a variety of countries and regions, such as Europe, Africa, and Asia.\nTypology of migrant: The programme covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with the knowledge and skills necessary to improve the health of migrants","trainings_faculty":"Faculty members from IOM and other organizations with expertise in migration and health","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and problem-based","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Iom: the international organization for migration offers a number of scholarships for students from developing countries who are interested in studying migration and health.","sustainibility_factors":"IOM: Training on migration and health. [Sustainability factor: Training]","numbers_since_2015":"Data Not Available","key_challenges":"IOM: Ensuring that the training on migration and health is relevant to the needs of the participants."},{"id":86,"institution_location":"Austria","created_at":"2023-11-08T22:29:35.930371Z","source":"https://www.migranthealthmsc.eu/consortium/3-danube-university-krems","institution_name":"Krems","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Danube University Krems (DUK) is one of the consortium partners of the Master of Science in Migration and Health, an online Graduate Degree program that covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The program recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The program has a global reach, as it examines migration and health in a variety of countries and regions, such as Europe, Africa, and Asia.\nTypology of migrant: The program covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with the knowledge and skills necessary to improve the health of migrants","trainings_faculty":"Faculty members from Danube University with expertise in migrant health","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and experiential","frequency_of_training":"Annual","funding_schemes":"Danube university krems: danube university krems offers a number of scholarships for students from all over the world who are interested in studying migration and health.","sustainibility_factors":"Danube University Krems: Master's program in Migrant Health. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"Danube University Krems: Securing funding for the Master's program in Migrant Health."},{"id":87,"institution_location":"Austria","created_at":"2023-11-08T22:29:35.963771Z","source":"https://www.donau-uni.ac.at/en/studies/migrationsmanagement-integrationsmanagement.html","institution_name":"Krems","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Master of Arts in Migration and Integration Management at Danube University Krems (DUK) covers a wide range of topics related to migration and integration, including:\n\nInternational vs internal migration: The program recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The program has a global reach, as it examines migration and integration in a variety of countries and regions, such as Europe, Africa, and Asia.\nTypology of migrant: The program covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with the knowledge and skills necessary to manage migration and integration processes","trainings_faculty":"Faculty members from Danube University with expertise in migration and integration","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, critical, and participatory","frequency_of_training":"Annual","funding_schemes":"Donau-uni vienna: donau-uni vienna offers a number of scholarships for students from all over the world who are interested in studying migration and health.","sustainibility_factors":"Donau-University Krems: Master's program in Migration and Integration Management. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Data Not Available","key_challenges":"Donau-University Krems: Balancing the need to provide a rigorous academic program with the need to be accessible to students with varying levels of experience."},{"id":88,"institution_location":"Austria","created_at":"2023-11-08T22:29:35.995095Z","source":"https://ufind.univie.ac.at/en/vvz_sub.html?semester=2023S&path=290603","institution_name":"University of Vienna","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Master of Science in Migration and Global Health at the University of Vienna (UVi) covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The program recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The program has a global reach, as it examines migration and health in a variety of countries and regions, such as Europe, Africa, and Asia.\nTypology of migrant: The program covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"Program aims to teach students about the complex relationship between migration and health, the factors influencing migrant health, and enhance research skills in the field","trainings_faculty":"Dr. Michael Bommes, Professor of Social Anthropology at the University of Vienna. Dr. Bommes is an expert in the field of migration and health, and he has published extensively on this topic","teaching_mechanism":"Online","teaching_approach":"interdisciplinary, evidence-based, and problem-based","frequency_of_training":"Ongoing/On Demand","funding_schemes":"University of vienna: the university of vienna offers a number of scholarships and grants for students studying migration, including the karl and thea herder scholarship and the vienna international scholarship.","sustainibility_factors":"University of Vienna: Course on migration and health. [Sustainability factor: Research]","numbers_since_2015":"Data Not Available","key_challenges":"University of Vienna: Ensuring that the course is relevant to the needs of the students."},{"id":89,"institution_location":"Australia","created_at":"2023-11-08T22:29:36.026935Z","source":"https://www.latrobe.edu.au/courses/bachelor-of-health-sciences#overview","institution_name":"La Trobe University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Bachelor of Heath Sciences course at La Trobe University covers a wide range of topics related to health, including: \n\nInternational vs internal migration health: The Bachelor of Health Sciences at La Trobe University does not specifically focus on migration health. However, the course covers a wide range of topics related to health, including Graduate Degree, epidemiology, and health promotion. These topics are relevant to the health of both migrants and non-migrants.\nNational vs regional vs global: The Bachelor of Health Sciences at La Trobe University has a global scope, as it covers topics that are relevant to health in all parts of the world.\nTypology of migrant: The Bachelor of Health Sciences at La Trobe University does not specifically focus on the health of any one type of migrant. However, the course covers topics that are relevant to the health of all migrants, such as the impact of migration on health and the challenges of accessing healthcare for migrants.","objective_of_training":"Provide students with a comprehensive understanding of the complex relationship between migration and health, Teach students about the social, economic, political, and environmental factors that influence the health of migrants, Teach students about the different ways in which migration can impact the health of individuals, families, and communities, Prepare students for careers in Graduate Degree, international development, and refugee and migrant services","trainings_faculty":"Dr. Sabrina Gupta, Professor of Graduate Degree at La Trobe University","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"nan","funding_schemes":"La trobe university: la trobe university offers a number of scholarships and bursaries for students studying migration, including the la trobe global pathways scholarship and the la trobe international scholarship.","sustainibility_factors":"La Trobe University: Bachelor of Health Sciences. [Sustainability factor: Comprehensiveness]","numbers_since_2015":"Approximately 100","key_challenges":"La Trobe University: Attracting and retaining top students in the Bachelor of Health Sciences program."},{"id":90,"institution_location":"Argentina","created_at":"2023-11-08T22:29:36.063821Z","source":"https://www.argentina.gob.ar/derechoshumanos/proteccion/centroulloa","institution_name":"Argentine Ministry of Human Rights","type_of_course":"Support Services","thematic_focus":"Human Rights and Legal Aspects","target_population":"nan","scope":"The Migration and Human Rights course at Centro Ulloa covers a wide range of topics related to migration and health, including: \n\nInternational vs internal migration health: The Centro Ulloa focuses on international migration health, as it provides assistance to victims of human rights abuses committed during the military dictatorship in Argentina and in democracy.\nNational vs regional vs global: The Centro Ulloa has a national scope, as it focuses on the human rights of migrants in Argentina.\nTypology of migrant: The Centro Ulloa focuses on the human rights of refugees, asylum seekers, and undocumented immigrants.","objective_of_training":"To provide assistance to victims of human rights violations, Help victims to heal from the trauma they have experienced, Help victims to obtain justice, Help victims to rebuild their lives","trainings_faculty":"The center is staffed by a team of professionals, including psychologists, lawyers, and social workers. The staff members are all experts in the field of human rights, and they have extensive experience working with victims of human rights violations.","teaching_mechanism":"Face to Face","teaching_approach":"participatory, experiential, and critical","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Centro ulloa: centro ulloa offers a number of funding opportunities for students studying migration, including fellowships, grants, and loans.","sustainibility_factors":"Centro Ulloa: Provides resources on migration and human rights. [Sustainability factor: Resources]","numbers_since_2015":"Data Not Available","key_challenges":"Centro Ulloa: Securing funding for the research on migration and human rights."},{"id":91,"institution_location":"Argentina","created_at":"2023-11-08T22:29:36.096596Z","source":"https://aula.vallhebron.com/","institution_name":"Facultad de Derecho-UBA","type_of_course":"Online Courses","thematic_focus":"Human Rights and Legal Aspects","target_population":"nan","scope":"The Migration and Health Observatory at Vall d'Hebron Barcelona Hospital Campus (Vall d'Hebron) covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The Observatory recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The Observatory has a global reach, as it examines migration and health in a variety of countries and regions, such as Europe, Africa, and Asia.\nTypology of migrant: The Observatory covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with the knowledge and skills necessary to understand and apply international human rights law","trainings_faculty":"Faculty members from the Facultad de Derecho-UBA with expertise in international human rights law","teaching_mechanism":"Both","teaching_approach":"interdisciplinary, problem-based, and experiential learning","frequency_of_training":"Ongoing/On Demand","funding_schemes":"Aula vall d'hebron: aula vall d'hebron offers a number of scholarships for students studying migration, including the aula vall d'hebron scholarship and the aula vall d'hebron fellowship.","sustainibility_factors":"The course is sustainable because it is taught by a faculty member who is an expert in the field of migration and health. The course is also supported by the University of Vienna, which is a leading university in Austria","numbers_since_2015":"Data Not Available","key_challenges":"Aula Vall d'Hebron: Ensuring that the Online Courses are accessible to a global audience."},{"id":92,"institution_location":"United States","created_at":"2023-11-08T22:29:36.126681Z","source":"https://www.coursera.org/learn/international-migrations","institution_name":"Coursera","type_of_course":"Online Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The course \"International Migrations: A Global Issue\" on Coursera covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and economic migrants. It also discusses the different health challenges faced by different types of migrants.","objective_of_training":"To provide participants with an understanding of the causes, consequences, and challenges of international migration, as well as the health implications of migration.","trainings_faculty":"Faculty from the University of Oxford and the University of California, Berkeley","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Financial aid available","sustainibility_factors":"Coursera is a non-profit organization that is committed to providing high-quality education to everyone.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in keeping up with the latest research and developments in the field of international migration"},{"id":93,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:36.160442Z","source":"https://www.iom.int/migration-health","institution_name":"IOM","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The International Organization for Migration (IOM) website on migration and health covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The website discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\nNational vs regional vs global: The website has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\nTypology of migrant: The website discusses the different types of migrants, such as refugees, asylum seekers, and economic migrants. It also discusses the different health challenges faced by different types of migrants.","objective_of_training":"To provide participants with an understanding of the health implications of migration and the policies and interventions that can be used to improve the health of migrants.","trainings_faculty":"Experts from IOM and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Financial aid available","sustainibility_factors":"IOM is a non-profit organization that is committed to providing high-quality education to everyone.","numbers_since_2015":"Not available","key_challenges":"Difficulty in reaching a wide range of audiences, particularly those in developing countries"},{"id":94,"institution_location":"United States","created_at":"2023-11-08T22:29:36.191205Z","source":"https://www.jhsph.edu/courses/course/21659/2015/380.750.01/migration-and-health-concepts-rates-and-relationsh","institution_name":"Johns Hopkins Bloomberg School of Graduate Degree","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The course \"Migration and Health: Concepts, Rates, and Relationships\" at the Johns Hopkins Bloomberg School of Graduate Degree covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and economic migrants. It also discusses the different health challenges faced by different types of migrants.","objective_of_training":"To provide participants with an understanding of the causes, consequences, and challenges of migration, as well as the health implications of migration.","trainings_faculty":"Faculty from the Johns Hopkins Bloomberg School of Graduate Degree","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Scholarships available","sustainibility_factors":"Johns Hopkins is a highly respected university with a strong commitment to Graduate Degree.","numbers_since_2015":"Not available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":95,"institution_location":"United States","created_at":"2023-11-08T22:29:36.226331Z","source":"https://globalstudiesoutreach.harvard.edu/global-migration-21st-century","institution_name":"Global Studies Outreach","type_of_course":"Short-term Programs","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Global Migration in the 21st Century workshop at Harvard University covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The workshop discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\nNational vs regional vs global: The workshop has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\nTypology of migrant: The workshop discusses the different types of migrants, such as refugees, asylum seekers, and economic migrants. It also discusses the different health challenges faced by different types of migrants.","objective_of_training":"To provide participants with an understanding of the major trends in global migration in the 21st century.","trainings_faculty":"Faculty from Harvard University and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Summer course","funding_schemes":"Financial aid available","sustainibility_factors":"Harvard is a highly respected university with a strong commitment to global studies.","numbers_since_2015":"Not available","key_challenges":"Difficulty in accommodating a large number of students"},{"id":96,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:36.261072Z","source":"https://emm.iom.int/online-courses/health-and-migration","institution_name":"International Organization for Migration (IOM)","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Health and Migration Online Course from the International Organization for Migration (IOM) covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course defines the terms \"migration\" and \"health\" and discusses the relationship between the two. It also discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and economic migrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health","objective_of_training":"To provide participants with an understanding of the health implications of migration and the policies and interventions that can be used to improve the health of migrants.","trainings_faculty":"Experts from IOM and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Financial aid available","sustainibility_factors":"IOM is a non-profit organization that is committed to providing high-quality education to everyone.","numbers_since_2015":"Not available","key_challenges":"Difficulty in developing and delivering interactive and engaging learning materials"},{"id":97,"institution_location":"Sweden","created_at":"2023-11-08T22:29:36.289965Z","source":"https://www.ecdc.europa.eu/en/news-events/e-learning-migration-and-health-health-professionals","institution_name":"European Centre for Disease Prevention and Control (ECDC)","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The E-Learning on Migration and Health for Health Professionals course from the European Centre for Disease Prevention and Control (ECDC) covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course defines the terms \"migration\" and \"health\" and discusses the relationship between the two. It also discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and economic migrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the health implications of migration and the policies and interventions that can be used to improve the health of migrants.","trainings_faculty":"Experts from ECDC and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Not applicable","sustainibility_factors":"ECDC is a European Union agency that is committed to improving Graduate Degree.","numbers_since_2015":"Not available","key_challenges":"Difficulty in keeping up with the latest developments in migration and health policy"},{"id":98,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:36.321911Z","source":"https://openwho.org/courses/intercultural-competence-in-migration","institution_name":"World Health Organization (WHO)","type_of_course":"Online Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"This course provides an introduction to the concept of intercultural competence and its importance in the context of migration. It examines the different dimensions of intercultural competence, such as cultural awareness, communication, and conflict resolution.","objective_of_training":"To provide participants with an understanding of the concept of intercultural competence and its importance in the context of migration.","trainings_faculty":"Experts from WHO and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Not applicable","sustainibility_factors":"WHO is a specialized agency of the United Nations that is committed to improving global health.","numbers_since_2015":"Not available","key_challenges":"Difficulty in translating learning materials into multiple languages"},{"id":99,"institution_location":"United States","created_at":"2023-11-08T22:29:36.352551Z","source":"https://www.campusvirtualsp.org/en/course/health-and-migration-2022","institution_name":"Pan American Health Organization (PAHO)","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Health and Migration course from the Virtual Campus for Graduate Degree (VCPH) covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course defines the terms \"migration\" and \"health\" and discusses the relationship between the two. It also discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and economic migrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the health implications of migration and the policies and interventions that can be used to improve the health of migrants.","trainings_faculty":"Experts from PAHO and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Not applicable","sustainibility_factors":"PAHO is a specialized agency of the WHO that is committed to improving health in the Americas.","numbers_since_2015":"Not available","key_challenges":"Difficulty in attracting students from outside of Spain"},{"id":100,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:36.381562Z","source":"http://www.drps.ed.ac.uk/23-24/dpt/cxglhe11080.htm","institution_name":"University of Edinburgh","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migration and Health course from the University of Edinburgh covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course defines the terms \"migration\" and \"health\" and discusses the relationship between the two. It also discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and economic migrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the health implications of migration, and the challenges and opportunities that migration presents for health systems and health professionals.","trainings_faculty":"Experts from the University of Edinburgh and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Not applicable","sustainibility_factors":"The University of Edinburgh is a highly respected university with a strong commitment to Graduate Degree.","numbers_since_2015":"Not available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":101,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:36.414615Z","source":"https://www.biicl.org/events/11672/short-course-international-migration-and-refugee-law?gclid=CjwKCAjw2K6lBhBXEiwA5RjtCRrlayoWZtFFmVovRVj0GpaDL92GJkbcugpeemFO2FFfq6OLeN2JvBoCktwQAvD_BwE","institution_name":"British Institute of International and Comparative Law (BIICL)","type_of_course":"Modules and Short Courses","thematic_focus":"Human Rights and Legal Aspects","target_population":"Migrants and Refugees","scope":"The Short Course: International Migration and Refugee Law at the British Institute of International and Comparative Law covers a wide range of topics related to migration and refugee law, including:\n\nInternational vs internal migration: The program recognizes that migration can have a significant impact on both individuals and societies, and it covers both international and internal migration.\nNational vs regional vs global: The program has a global reach, as it examines migration and integration in a variety of countries and regions, such as Europe, Africa, and Asia.\nTypology of migrant: The program covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with an understanding of the international law of migration and refugee protection, and the challenges and opportunities that these laws present for lawyers, policy makers, and other stakeholders.","trainings_faculty":"Experts from BIICL and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"BhBXEIwA5RitCRrlayoWZtFFmVovRVjOGpaDL92GJkbcugpeemFO2FFfq60LeN2","funding_schemes":"Once a year","sustainibility_factors":"BIICL is a leading independent law institute that is committed to promoting the rule of law and human rights.","numbers_since_2015":"Not available","key_challenges":"Not applicable"},{"id":102,"institution_location":"Canada","created_at":"2023-11-08T22:29:36.441427Z","source":"https://www.mcgill.ca/summerinstitute-globalhealth/courses/institute-peace-health-and-sustainability/migration-and-health","institution_name":"McGill Summer Institute in Global Health","type_of_course":"Short-term Programs","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migration and Health course from McGill University covers a wide range of topics related to migration and health, including: \n\nInternational vs internal migration health: The course discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the health implications of migration, and the challenges that migrants face in accessing health care.","trainings_faculty":"Experts from McGill University and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Summer course","funding_schemes":"Scholarships available","sustainibility_factors":"McGill is a highly respected university with a strong commitment to global health.","numbers_since_2015":"Not available","key_challenges":"Difficulty in accommodating a large number of students"},{"id":103,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:36.469063Z","source":"https://www.swisstph.ch/en/study-with-us/postgraduate/migrationandhealth","institution_name":"Swiss Tropical and Graduate Degree Institute (Swiss TPH)","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migration and Health for People on the Move course from the Swiss Tropical and Graduate Degree Institute covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the health implications of migration, and the policies and interventions that can be used to improve the health of migrants.","trainings_faculty":"Experts from Swiss TPH and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Scholarships available","sustainibility_factors":"Swiss TPH is a leading international institute for tropical and Graduate Degree.","numbers_since_2015":"Not available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":104,"institution_location":"Online","created_at":"2023-11-08T22:29:36.527640Z","source":"https://migration-health.com","institution_name":"Migration and Health","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migration and Health course from migration-health.com covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work","objective_of_training":"To provide participants with an understanding of the health implications of migration, and the challenges that migrants face in accessing health care.","trainings_faculty":"Experts from different organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Fee-based","sustainibility_factors":"Not available","numbers_since_2015":"Not available","key_challenges":"Difficulty in keeping up with the latest research and developments in the field of migration health"},{"id":105,"institution_location":"Norway","created_at":"2023-11-08T22:29:36.562295Z","source":"https://www.uio.no/studier/emner/medisin/inthealth/INTHE4122/","institution_name":"University of Oslo","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migration and Health course from the University of Oslo covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide students with an in-depth understanding of the health implications of migration, and the policies and interventions that can be used to improve the health of migrants.","trainings_faculty":"Experts from the University of Oslo and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Not applicable","sustainibility_factors":"Not available","numbers_since_2015":"Not available","key_challenges":"Difficulty in attracting students from outside of Norway"},{"id":106,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:36.603675Z","source":"https://www.ucl.ac.uk/global-health/study/all_teaching_modules/ethnicity-migration-health","institution_name":"University College London (UCL)","type_of_course":"Modules and Short Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Ethnicity, Migration and Health course from University College London covers a wide range of topics related to the health of ethnic minority groups and migrants, including:\n\nInternational vs internal migration health: The course discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\n\nNational vs regional vs global: The course has a global scope, as it discusses ethnicity, migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by ethnic minority groups and migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work","objective_of_training":"To provide students with an understanding of the health implications of ethnicity and migration, and the policies and interventions that can be used to improve the health of these groups.","trainings_faculty":"Experts from UCL and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Scholarships available","sustainibility_factors":"Not available","numbers_since_2015":"Not available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":107,"institution_location":"United States","created_at":"2023-11-08T22:29:36.634273Z","source":"https://sociology.duke.edu/courses/sociology-immigration-and-health","institution_name":"Duke University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Sociology of Immigration and Health course from Duke University covers a wide range of topics related to the health of immigrants, including:\n\nInternational vs internal migration health: The course discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\n\nNational vs regional vs global: The course has a global scope, as it discusses immigration and health issues in all parts of the world. However, it also discusses the specific challenges faced by immigrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide students with an understanding of the social and health implications of migration, and the challenges that migrants face in accessing health care.","trainings_faculty":"Faculty from Duke University","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Scholarships available","sustainibility_factors":"Not available","numbers_since_2015":"Not available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":108,"institution_location":"Sweden","created_at":"2023-11-08T22:29:36.675880Z","source":"https://akademiliv.se/en/2023/04/90676/","institution_name":"Akademiliv","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Migration and Health course from Akademiliv covers a wide range of topics related to migration and health, including:\n\nInternational vs internal migration health: The course discusses the different health challenges faced by international migrants and internal migrants. For example, international migrants may face challenges accessing healthcare in their new country, while internal migrants may face challenges accessing healthcare due to conflict or natural disasters.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration and health issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different health challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the health implications of migration, and the challenges and opportunities that migration presents for health systems and health professionals.","trainings_faculty":"Experts from Akademiliv and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Scholarships available","sustainibility_factors":"Not available","numbers_since_2015":"Not available","key_challenges":"Difficulty in keeping up with the latest research and developments in the field of international migration"},{"id":109,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:36.706979Z","source":"https://www.futurelearn.com/courses/migration-facts","institution_name":"FutureLearn","type_of_course":"Online Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Migration Facts course from FutureLearn covers a wide range of topics related to migration, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the key facts about migration, and the challenges that migrants face.","trainings_faculty":"Experts from FutureLearn and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Not applicable","sustainibility_factors":"Not available","numbers_since_2015":"Not available","key_challenges":"Difficulty in keeping up with the latest research and developments in the field of migration"},{"id":110,"institution_location":"Italy","created_at":"2023-11-08T22:29:36.745131Z","source":"https://migrationpolicycentre.eu/migration-summer-school/","institution_name":"Migration Policy Centre (MPC)","type_of_course":"Short-term Programs","thematic_focus":"Human Rights and Legal Aspects","target_population":"Migrants and Refugees","scope":"The Migration Summer School from the Migration Policy Centre covers a wide range of topics related to migration, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the transnational governance of international migration, asylum and mobility, and the challenges and opportunities that this governance presents.","trainings_faculty":"Experts from MPC and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Once a year","sustainibility_factors":"MPC has a strong track record of delivering high-quality training.","numbers_since_2015":"Not available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":111,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:36.781089Z","source":"https://www.itcilo.org/courses/market-based-livelihood-interventions-refugees-and-host-communities-certification-programme","institution_name":"International Labour Organization (ILO)","type_of_course":"Modules and Short Courses","thematic_focus":"Migration and Development","target_population":"Migrants and Refugees","scope":"The Market-based Livelihood Interventions for Refugees and Host Communities course from the ILO covers a wide range of topics related to livelihood interventions for refugees and host communities, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. However, the course focuses on refugees and host communities, who are often displaced internally or internationally.\n\nNational vs regional vs global: The course has a global scope, as it discusses livelihood interventions for refugees and host communities in all parts of the world. However, it also discusses the specific challenges faced by refugees and host communities in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and undocumented immigrants. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with the knowledge and skills they need to design and implement market-based livelihood interventions for refugees and host communities.","trainings_faculty":"Experts from ILO and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Self-paced","sustainibility_factors":"ILO has a strong track record of delivering high-quality training.","numbers_since_2015":"Not available","key_challenges":"Difficulty in accommodating a large number of students"},{"id":112,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:36.816905Z","source":"https://www.rsc.ox.ac.uk/study/international-summer-school/summer-school-overview","institution_name":"Refugee Studies Centre (RSC)","type_of_course":"Short-term Programs","thematic_focus":"Migration Issues","target_population":"Migrants and Refugees","scope":"The International Summer School in Forced Migration from the Refugee Studies Centre covers a wide range of topics related to forced migration, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. However, the course focuses on forced migration, which is the involuntary movement of people across national borders or within their own country.\n\nNational vs regional vs global: The course has a global scope, as it discusses forced migration issues in all parts of the world. However, it also discusses the specific challenges faced by forcibly displaced people in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, and internally displaced people. It also discusses the different challenges faced by different types of forcibly displaced people. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while internally displaced people may be more likely to experience food insecurity.","objective_of_training":"To provide participants with an understanding of the key concepts, theories, and debates in forced migration, and the policies and interventions that can be used to improve the lives of refugees and displaced people.","trainings_faculty":"Experts from RSC and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Self-paced","sustainibility_factors":"RSC has a strong track record of delivering high-quality training.","numbers_since_2015":"Not available","key_challenges":"Difficulty in developing and delivering interactive and engaging learning materials"},{"id":113,"institution_location":"South Africa","created_at":"2023-11-08T22:29:36.851393Z","source":"https://www.wits.ac.za/course-finder/postgraduate/humanities/ma-migration-and-displacement/","institution_name":"Wits University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The MA in Migration and Displacement from the University of the Witwatersrand covers a wide range of topics related to migration and displacement, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. However, the course focuses on both international and internal migration, as well as displacement.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration and displacement issues in all parts of the world. However, it also discusses the specific challenges faced by migrants and displaced people in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants and displaced people. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide students with an understanding of the causes, consequences, and challenges of migration and displacement, and the policies and interventions that can be used to improve the lives of migrants and displaced people.","trainings_faculty":"Experts from Wits University and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Scholarships available","sustainibility_factors":"Wits University has a strong track record of delivering high-quality education.","numbers_since_2015":"Not available","key_challenges":"Difficulty in keeping up with tDifficulty in attracting students from outside of South Africahe latest developments in migration and health policy"},{"id":114,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:36.893595Z","source":"https://migration4development.org/en/connect/e-learning","institution_name":"Migration for Development (M4D)","type_of_course":"Online Courses","thematic_focus":"Migration and Development","target_population":"Migrants and Refugees","scope":"The Migration and Sustainable Development: A Course for Practitioners course from Migration for Development covers a wide range of topics related to migration and sustainable development, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. However, the course focuses on both international and internal migration, as well as displacement.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration and sustainable development issues in all parts of the world. However, it also discusses the specific challenges faced by migrants and displaced people in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants and displaced people. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the key concepts, theories, and debates in migration and development, and the policies and interventions that can be used to maximize the benefits of migration for both migrants and host societies.","trainings_faculty":"Experts from M4D and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Not applicable","sustainibility_factors":"M4D has a strong track record of delivering high-quality training.","numbers_since_2015":"Not available","key_challenges":"Difficulty in developing and delivering interactive and engaging learning materials"},{"id":115,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:36.925482Z","source":"https://www.ifrc.org/our-work/disasters-climate-and-crises/migration-and-displacement/learning-resources","institution_name":"International Federation of Red Cross and Red Crescent Societies (IFRC)","type_of_course":"Modules and Short Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Migration and Displacement: Learning Resources course from the IFRC covers a wide range of topics related to migration and displacement, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. However, the course focuses on both international and internal migration, as well as displacement.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration and displacement issues in all parts of the world. However, it also discusses the specific challenges faced by migrants and displaced people in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants and displaced people. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide people with an understanding of the challenges and opportunities of migration and displacement, and to promote the rights and well-being of migrants and displaced people.","trainings_faculty":"Experts from IFRC and other organizations","teaching_mechanism":"Online","teaching_approach":"various","frequency_of_training":"Self-paced","funding_schemes":"Not applicable","sustainibility_factors":"IFRC has a strong track record of delivering high-quality training.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in reaching a wide range of audiences, particularly those in developing countries"},{"id":116,"institution_location":"Netherlands","created_at":"2023-11-08T22:29:36.963546Z","source":"https://thehagueacademy.com/course/migration-and-local-authorities/","institution_name":"The Hague Academy of International Law","type_of_course":"Short-term Programs","thematic_focus":"Migration and Development","target_population":"Migrants and Refugees","scope":"The Migration and Local Authorities course from The Hague Academy of International Law covers a wide range of topics related to the role of local authorities in addressing migration, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. However, the course focuses on both international and internal migration, as well as displacement.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration and local authorities issues in all parts of the world. However, it also discusses the specific challenges faced by local authorities in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the challenges and opportunities of migration for local authorities, and the policies and interventions that can be used to manage migration at the local level.","trainings_faculty":"Experts from The Hague Academy of International Law and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Not applicable","sustainibility_factors":"The Hague Academy of International Law has a strong track record of delivering high-quality training.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in translating learning materials into multiple languages"},{"id":117,"institution_location":"Italy","created_at":"2023-11-08T22:29:36.998235Z","source":"https://unicri.it/summer-specialized-course-migration-and-human-rights-July-2023","institution_name":"United Nations Interregional Crime and Justice Research Institute (UNICRI)","type_of_course":"Short-term Programs","thematic_focus":"Human Rights and Legal Aspects","target_population":"Migrants and Refugees","scope":"The Summer Specialized Course on Migration and Human Rights from UNICRI covers a wide range of topics related to migration and human rights, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. However, the course focuses on both international and internal migration, as well as displacement.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration and human rights issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience human rights violations due to their lack of legal status, while economic migrants may be more likely to experience human rights violations due to their exploitation by employers.","objective_of_training":"To provide participants with an understanding of the human rights implications of migration, and the policies and interventions that can be used to protect the human rights of migrants.","trainings_faculty":"Experts from UNICRI and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Once a year","sustainibility_factors":"UNICRI has a strong track record of delivering high-quality training.","numbers_since_2015":"Data Not Available","key_challenges":"Not applicable"},{"id":118,"institution_location":"Canada","created_at":"2023-11-08T22:29:37.029384Z","source":"https://www.camh.ca/en/professionals/professionals--projects/immigrant-and-refugee-mental-health-project/courses","institution_name":"Centre for Addiction and Mental Health (CAMH)","type_of_course":"Online Courses","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The Immigrant and Refugee Mental Health course from CAMH covers a wide range of topics related to the mental health of immigrants and refugees, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. However, the course focuses on immigrants and refugees, who are often displaced internationally or internally.\n\nNational vs regional vs global: The course has a global scope, as it discusses the mental health of immigrants and refugees in all parts of the world. However, it also discusses the specific challenges faced by immigrants and refugees in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience mental health problems due to the stress of adjusting to a new culture.","objective_of_training":"To provide mental health professionals with an understanding of the mental health needs of immigrants and refugees, and the evidence-based interventions that can be used to support their mental health.","trainings_faculty":"Experts from CAMH and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Not applicable","sustainibility_factors":"CAMH has a strong track record of delivering high-quality training.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in developing and delivering learning materials that are relevant to a wide range of practitioners"},{"id":119,"institution_location":"United Kingom","created_at":"2023-11-08T22:29:37.089077Z","source":"https://www.ox.ac.uk/admissions/graduate/courses/msc-migration-studies","institution_name":"University of Oxford","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The MSc in Migration Studies from the University of Oxford covers a wide range of topics related to migration, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. The course covers both international and internal migration, as well as displacement.\n\nNational vs regional vs global: The course has a global scope, as it discusses migration issues in all parts of the world. However, it also discusses the specific challenges faced by migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide students with an understanding of the key concepts, theories, and debates in migration studies, and the policies and interventions that can be used to improve the lives of migrants and their families.","trainings_faculty":"Experts from the University of Oxford and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Scholarships available","sustainibility_factors":"The University of Oxford has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":120,"institution_location":"Switzerland","created_at":"2023-11-08T22:29:37.128737Z","source":"https://www.itcilo.org/courses/e-learning-extending-social-protection-migrant-workers-refugees-and-their-families-1","institution_name":"International Labour Organization (ILO)","type_of_course":"Online Courses","thematic_focus":"Migration and Development","target_population":"Migrants and Refugees","scope":"The Extending Social Protection to Migrant Workers, Refugees and their Families course from the ITCILO covers a wide range of topics related to social protection for migrants, refugees and their families, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. The course focuses on international migration, but it also discusses the challenges of extending social protection to migrants and their families in both internal and international contexts.\n\nNational vs regional vs global: The course has a global scope, as it discusses social protection issues for migrants, refugees and their families in all parts of the world. However, it also discusses the specific challenges faced by migrants, refugees and their families in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide practitioners with the knowledge and skills they need to extend social protection to migrant workers, refugees, and their families.","trainings_faculty":"Experts from ILO and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Not applicable","sustainibility_factors":"ILO has a strong track record of delivering high-quality training.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in keeping up with the latest developments in migration and social protection policy"},{"id":121,"institution_location":"Ireland","created_at":"2023-11-08T22:29:37.157105Z","source":"https://www.universityofgalway.ie/courses/taught-postgraduate-courses/law-international-migration-refugee-law.html","institution_name":"University of Galway","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Human Rights and Legal Aspects","target_population":"Migrants and Refugees","scope":"The LLM in Law: International Migration and Refugee Law course from the University of Galway covers a wide range of topics related to international migration and refugee law, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. The course focuses on international migration, but it also discusses the challenges of applying refugee law in an internal context.\n\nNational vs regional vs global: The course has a global scope, as it discusses international migration and refugee law issues in all parts of the world. However, it also discusses the specific challenges faced by migrants and refugees in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide students with an understanding of the key concepts, theories, and debates in international migration and refugee law, and the policies and interventions that can be used to improve the lives of migrants and refugees.","trainings_faculty":"Experts from the University of Galway and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Scholarships available","sustainibility_factors":"The University of Galway has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":122,"institution_location":"United States","created_at":"2023-11-08T22:29:37.188857Z","source":"https://www.bu.edu/academics/sph/courses/sph-mc-786/","institution_name":"Boston University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The SPH MC 786: Immigrant and Refugee Health course from Boston University covers a wide range of topics related to the health of immigrants and refugees, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. The course focuses on immigrants and refugees, who are often displaced internationally or internally.\n\nNational vs regional vs global: The course has a global scope, as it discusses the health of immigrants and refugees in all parts of the world. However, it also discusses the specific challenges faced by immigrants and refugees in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide students with an understanding of the health status of immigrants and refugees, and the policies and interventions that can be used to improve their health.","trainings_faculty":"Experts from Boston University and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Scholarships available","sustainibility_factors":"Boston University has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in accommodating a large number of students"},{"id":123,"institution_location":"Italy","created_at":"2023-11-08T22:29:37.224021Z","source":"https://gender.cgiar.org/training/migration-and-gender","institution_name":"CGIAR Gender Platform","type_of_course":"Online Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Migration and Gender course from CGIAR GENDER covers a wide range of topics related to the gender dimensions of migration, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. The course focuses on both international and internal migration, as well as displacement.\n\nNational vs regional vs global: The course has a global scope, as it discusses gender dimensions of migration in all parts of the world. However, it also discusses the specific challenges faced by women and men migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience gender-based violence due to their displacement, while economic migrants may be more likely to experience exploitation in the workplace.","objective_of_training":"To provide participants with an understanding of the gender dimensions of migration, and the policies and interventions that can be used to improve the lives of migrants.","trainings_faculty":"Experts from CGIAR Gender Platform and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Not applicable","sustainibility_factors":"CGIAR Gender Platform has a strong track record of delivering high-quality training.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in developing and delivering interactive and engaging learning materials"},{"id":124,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:37.253076Z","source":"https://www.arts.ac.uk/subjects/curation-and-culture/short-courses/art-history-and-criticism/art-and-migration-online-short-course-csm","institution_name":"University of the Arts London (UAL)","type_of_course":"Online Courses","thematic_focus":"nan","target_population":"nan","scope":"The Art and Migration course from Arts.ac.uk covers a wide range of topics related to the intersection of art and migration, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. The course focuses on both international and internal migration, as well as displacement.\n\nNational vs regional vs global: The course has a global scope, as it discusses the intersection of art and migration in all parts of the world. However, it also discusses the specific challenges faced by migrants and refugees in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide participants with an understanding of the history of art and migration, and the challenges and opportunities of using art to promote understanding and dialogue about migration.","trainings_faculty":"Experts from UAL and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Not applicable","sustainibility_factors":"UAL has a strong track record of delivering high-quality training.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":125,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:37.290589Z","source":"https://www.kent.ac.uk/courses/postgraduate/334","institution_name":"University of Kent","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration and Development","target_population":"Migrants and Refugees","scope":"The MSc in Refugee and Forced Migration Studies from the University of Kent covers a wide range of topics related to refugee and forced migration studies, including:\n\nInternational vs internal migration: The course discusses the different types of migration, including international migration and internal migration. International migration refers to the movement of people from one country to another, while internal migration refers to the movement of people within a country. The course focuses on refugee and forced migration, which can be either international or internal.\n\nNational vs regional vs global: The course has a global scope, as it discusses refugee and forced migration issues in all parts of the world. However, it also discusses the specific challenges faced by refugees and forced migrants in different regions, such as the Middle East and Africa.\n\nTypology of migrant: The course discusses the different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and internally displaced people. It also discusses the different challenges faced by different types of migrants. For example, refugees may be more likely to experience mental health problems due to the trauma of their displacement, while economic migrants may be more likely to experience occupational health problems due to the nature of their work.","objective_of_training":"To provide students with an understanding of the relationship between migration and development, and the policies and interventions that can be used to promote development.","trainings_faculty":"Experts from the University of Kent and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Scholarships available","sustainibility_factors":"University of Kent has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":126,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:37.327572Z","source":"https://www.bucks.ac.uk/courses/postgraduate/msc-migration-studies-policy-and-practice","institution_name":"Buckinghamshire New University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"Buckinghamshire New University offers an MSc Migration Studies: Policy and Practice course that:\n\nInternational vs internal migration: covers both international and internal migration.\nNational vs regional vs global: has a national reach, as it examines migration in the United Kingdom, but it also has a global perspective, as it partners with organizations and researchers from around the world.\nTypology of migrant: covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with an understanding of the key concepts, theories, and debates in migration studies, and the policies and interventions that can be used to improve the lives of migrants and their families.","trainings_faculty":"Experts from Buckinghamshire New University and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Scholarships available","sustainibility_factors":"Buckinghamshire New University has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in recruiting and retaining qualified faculty"},{"id":127,"institution_location":"United Kingdom","created_at":"2023-11-08T22:29:37.371963Z","source":"https://www.ice.cam.ac.uk/course/making-sense-international-migration","institution_name":"Institute of Continuing Education (ICE)","type_of_course":"Modules and Short Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The Institute of Continuing Education (ICE) at the University of Cambridge offers a course called \"Making Sense of International Migration\" that:\n\nInternational vs internal migration: covers both international and internal migration.\nNational vs regional vs global: has a global reach, as it examines migration in the context of the modern world, but it also has a national perspective, as it considers the impact of migration on the United Kingdom.\nTypology of migrant: covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with an understanding of the key concepts, theories, and debates in international migration, and the policies and interventions that can be used to manage migration.","trainings_faculty":"Experts from ICE and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Not applicable","sustainibility_factors":"ICE has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in keeping up with the latest research and developments in the field of international migration"},{"id":128,"institution_location":"United States","created_at":"2023-11-08T22:29:37.413853Z","source":"https://sph.cuny.edu/academics/Graduate Degrees-and-programs/masters-programs/ms-in-global-and-migrant-health-policy/","institution_name":"CUNY Graduate School of Graduate Degree & Health Policy","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Health and Migration","target_population":"Migrants and Refugees","scope":"The CUNY Graduate School of Graduate Degree & Health Policy offers an MS in Global and Migrant Health Policy course that:\n\nInternational vs internal migration: covers both international and internal migration.\nNational vs regional vs global: has a global reach, as it examines migration in the context of the modern world, but it also has a national perspective, as it considers the impact of migration on the United States.\nTypology of migrant: covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with an understanding of the key concepts, theories, and debates in global and migrant health policy, and the policies and interventions that can be used to improve the health of migrants and their families.","trainings_faculty":"Experts from CUNY SPH and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Scholarships available","sustainibility_factors":"CUNY SPH has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in accommodating a large number of students"},{"id":129,"institution_location":"Greece","created_at":"2023-11-08T22:29:37.449114Z","source":"https://www.soc.aegean.gr/ext-files/gr/mmrfe/gr-mmrfe-course-outline.pdf","institution_name":"Aegean University","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"The University of the Aegean offers a Master of Arts in Migration, Refugee and Forced Migration Studies course that:\n\nInternational vs internal migration: covers both international and internal migration.\nNational vs regional vs global: has a global reach, as it examines migration in the context of the modern world, but it also has a regional perspective, as it focuses on the Mediterranean region.\nTypology of migrant: covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with an understanding of the key concepts, theories, and debates in migration, mobility, and refugee studies, and the policies and interventions that can be used to improve the lives of migrants, refugees, and displaced persons.","trainings_faculty":"Experts from Aegean University and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Not applicable","sustainibility_factors":"Aegean University has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"Difficulty in attracting students from outside of Greece"},{"id":130,"institution_location":"United Kingom","created_at":"2023-11-08T22:29:37.480041Z","source":"https://www.london.ac.uk/courses/refugee-protection-and-forced-migration-studies","institution_name":"SOAS University of London","type_of_course":"Doctoral and Graduate Degrees","thematic_focus":"Migration Issues","target_population":"Migrants and Refugees","scope":"The School of Advanced Study, University of London offers an MA in Refugee Protection and Forced Migration Studies course that:\n\nInternational vs internal migration: covers both international and internal migration.\nNational vs regional vs global: has a global reach, as it examines migration in the context of the modern world, but it also has a regional perspective, as it focuses on Europe.\nTypology of migrant: covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide students with an understanding of the legal, political, and social dimensions of refugee protection and forced migration, and the policies and interventions that can be used to improve the lives of refugees and other forcibly displaced persons.","trainings_faculty":"Experts from SOAS University of London and other organizations","teaching_mechanism":"Face to Face","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Once a year","funding_schemes":"Scholarships available","sustainibility_factors":"SOAS University of London has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"nan"},{"id":131,"institution_location":"Italy","created_at":"2023-11-08T22:29:37.503779Z","source":"https://www.futurelearn.com/courses/migration-cities","institution_name":"FutureLearn","type_of_course":"Online Courses","thematic_focus":"Migration Studies","target_population":"Migrants and Refugees","scope":"FutureLearn offers an Online Course called Migration and Cities that:\n\nInternational vs internal migration: covers both international and internal migration.\nNational vs regional vs global: has a global reach, as it examines migration in the context of the modern world, but it also has a regional perspective, as it focuses on cities in Europe, North America, and Asia.\nTypology of migrant: covers a wide range of topics related to the experiences of different types of migrants, such as refugees, asylum seekers, undocumented immigrants, and seasonal migrant workers.","objective_of_training":"To provide participants with an understanding of the relationship between migration and cities, and the challenges and opportunities that migration can bring to cities.","trainings_faculty":"Experts from FutureLearn and other organizations","teaching_mechanism":"Online","teaching_approach":"lecture, discussion, and case studies","frequency_of_training":"Self-paced","funding_schemes":"Not applicable","sustainibility_factors":"FutureLearn has a strong track record of delivering high-quality education.","numbers_since_2015":"Data Not Available","key_challenges":"nan"}]}","status":200,"url":"https://mhadri-final-database-af023718fb18.herokuapp.com/courses_data/"},"revalidate":31536000,"tags":[]}